{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport { computed, ref } from \"vue\";\nimport { getLeafKeys } from \"../utils.js\";\nimport { union } from \"../../_utils/array.js\";\n\nconst useRowSelection = ({\n  selectedKeys,\n  defaultSelectedKeys,\n  rowSelection,\n  currentAllRowKeys,\n  currentAllEnabledRowKeys,\n  emit\n}) => {\n  var _a, _b, _c;\n\n  const isRadio = computed(() => {\n    var _a2;\n\n    return ((_a2 = rowSelection.value) == null ? void 0 : _a2.type) === \"radio\";\n  });\n\n  const _selectedRowKeys = ref((_c = (_b = defaultSelectedKeys.value) != null ? _b : (_a = rowSelection.value) == null ? void 0 : _a.defaultSelectedRowKeys) != null ? _c : []);\n\n  const selectedRowKeys = computed(() => {\n    var _a2, _b2, _c2;\n\n    return (_c2 = (_b2 = selectedKeys.value) != null ? _b2 : (_a2 = rowSelection.value) == null ? void 0 : _a2.selectedRowKeys) != null ? _c2 : _selectedRowKeys.value;\n  });\n  const currentSelectedRowKeys = computed(() => selectedRowKeys.value.filter(key => currentAllRowKeys.value.includes(key)));\n\n  const handleSelectAll = checked => {\n    const newKeys = union(selectedRowKeys.value, currentAllEnabledRowKeys.value, !checked);\n    _selectedRowKeys.value = newKeys;\n    emit(\"selectAll\", checked);\n    emit(\"selectionChange\", newKeys);\n    emit(\"update:selectedKeys\", newKeys);\n  };\n\n  const handleSelect = (checked, record) => {\n    const selectedAllRowKeys = isRadio.value ? [record.key] : union(selectedRowKeys.value, [record.key], !checked);\n    _selectedRowKeys.value = selectedAllRowKeys;\n    emit(\"select\", selectedAllRowKeys, record.key, record.raw);\n    emit(\"selectionChange\", selectedAllRowKeys);\n    emit(\"update:selectedKeys\", selectedAllRowKeys);\n  };\n\n  const handleSelectAllLeafs = (record, checked) => {\n    const newKeys = union(selectedRowKeys.value, getLeafKeys(record), !checked);\n    _selectedRowKeys.value = newKeys;\n    emit(\"select\", newKeys, record.key, record.raw);\n    emit(\"selectionChange\", newKeys);\n    emit(\"update:selectedKeys\", newKeys);\n  };\n\n  const select = (rowKey, checked = true) => {\n    const _rowKeys = [].concat(rowKey);\n\n    const newSelectedRowKeys = isRadio.value ? _rowKeys : union(selectedRowKeys.value, _rowKeys, !checked);\n    _selectedRowKeys.value = newSelectedRowKeys;\n    emit(\"selectionChange\", newSelectedRowKeys);\n    emit(\"update:selectedKeys\", newSelectedRowKeys);\n  };\n\n  const selectAll = (checked = true) => {\n    const newKeys = union(selectedRowKeys.value, currentAllEnabledRowKeys.value, !checked);\n    _selectedRowKeys.value = newKeys;\n    emit(\"selectionChange\", newKeys);\n    emit(\"update:selectedKeys\", newKeys);\n  };\n\n  const clearSelected = () => {\n    _selectedRowKeys.value = [];\n    emit(\"selectionChange\", []);\n    emit(\"update:selectedKeys\", []);\n  };\n\n  return {\n    isRadio,\n    selectedRowKeys,\n    currentSelectedRowKeys,\n    handleSelectAll,\n    handleSelect,\n    handleSelectAllLeafs,\n    select,\n    selectAll,\n    clearSelected\n  };\n};\n\nexport { useRowSelection };","map":{"version":3,"names":["computed","ref","getLeafKeys","union","useRowSelection","selectedKeys","defaultSelectedKeys","rowSelection","currentAllRowKeys","currentAllEnabledRowKeys","emit","_a","_b","_c","isRadio","_a2","value","type","_selectedRowKeys","defaultSelectedRowKeys","selectedRowKeys","_b2","_c2","currentSelectedRowKeys","filter","key","includes","handleSelectAll","checked","newKeys","handleSelect","record","selectedAllRowKeys","raw","handleSelectAllLeafs","select","rowKey","_rowKeys","concat","newSelectedRowKeys","selectAll","clearSelected"],"sources":["/www/wwwroot/admin/node_modules/@arco-design/web-vue/es/table/hooks/use-row-selection.js"],"sourcesContent":["import { computed, ref } from \"vue\";\nimport { getLeafKeys } from \"../utils.js\";\nimport { union } from \"../../_utils/array.js\";\nconst useRowSelection = ({\n  selectedKeys,\n  defaultSelectedKeys,\n  rowSelection,\n  currentAllRowKeys,\n  currentAllEnabledRowKeys,\n  emit\n}) => {\n  var _a, _b, _c;\n  const isRadio = computed(() => {\n    var _a2;\n    return ((_a2 = rowSelection.value) == null ? void 0 : _a2.type) === \"radio\";\n  });\n  const _selectedRowKeys = ref((_c = (_b = defaultSelectedKeys.value) != null ? _b : (_a = rowSelection.value) == null ? void 0 : _a.defaultSelectedRowKeys) != null ? _c : []);\n  const selectedRowKeys = computed(() => {\n    var _a2, _b2, _c2;\n    return (_c2 = (_b2 = selectedKeys.value) != null ? _b2 : (_a2 = rowSelection.value) == null ? void 0 : _a2.selectedRowKeys) != null ? _c2 : _selectedRowKeys.value;\n  });\n  const currentSelectedRowKeys = computed(() => selectedRowKeys.value.filter((key) => currentAllRowKeys.value.includes(key)));\n  const handleSelectAll = (checked) => {\n    const newKeys = union(selectedRowKeys.value, currentAllEnabledRowKeys.value, !checked);\n    _selectedRowKeys.value = newKeys;\n    emit(\"selectAll\", checked);\n    emit(\"selectionChange\", newKeys);\n    emit(\"update:selectedKeys\", newKeys);\n  };\n  const handleSelect = (checked, record) => {\n    const selectedAllRowKeys = isRadio.value ? [record.key] : union(selectedRowKeys.value, [record.key], !checked);\n    _selectedRowKeys.value = selectedAllRowKeys;\n    emit(\"select\", selectedAllRowKeys, record.key, record.raw);\n    emit(\"selectionChange\", selectedAllRowKeys);\n    emit(\"update:selectedKeys\", selectedAllRowKeys);\n  };\n  const handleSelectAllLeafs = (record, checked) => {\n    const newKeys = union(selectedRowKeys.value, getLeafKeys(record), !checked);\n    _selectedRowKeys.value = newKeys;\n    emit(\"select\", newKeys, record.key, record.raw);\n    emit(\"selectionChange\", newKeys);\n    emit(\"update:selectedKeys\", newKeys);\n  };\n  const select = (rowKey, checked = true) => {\n    const _rowKeys = [].concat(rowKey);\n    const newSelectedRowKeys = isRadio.value ? _rowKeys : union(selectedRowKeys.value, _rowKeys, !checked);\n    _selectedRowKeys.value = newSelectedRowKeys;\n    emit(\"selectionChange\", newSelectedRowKeys);\n    emit(\"update:selectedKeys\", newSelectedRowKeys);\n  };\n  const selectAll = (checked = true) => {\n    const newKeys = union(selectedRowKeys.value, currentAllEnabledRowKeys.value, !checked);\n    _selectedRowKeys.value = newKeys;\n    emit(\"selectionChange\", newKeys);\n    emit(\"update:selectedKeys\", newKeys);\n  };\n  const clearSelected = () => {\n    _selectedRowKeys.value = [];\n    emit(\"selectionChange\", []);\n    emit(\"update:selectedKeys\", []);\n  };\n  return {\n    isRadio,\n    selectedRowKeys,\n    currentSelectedRowKeys,\n    handleSelectAll,\n    handleSelect,\n    handleSelectAllLeafs,\n    select,\n    selectAll,\n    clearSelected\n  };\n};\nexport { useRowSelection };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}