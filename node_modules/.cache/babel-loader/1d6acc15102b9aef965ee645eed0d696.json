{"ast":null,"code":"import { defineComponent, computed, resolveComponent, openBlock, createElementBlock, Fragment, createBlock, mergeProps, withCtx, createElementVNode, normalizeClass, createVNode, createCommentVNode, normalizeProps, renderSlot, createTextVNode, toDisplayString } from \"vue\";\nimport Tooltip from \"../tooltip/index.js\";\nimport IconCheckCircleFill from \"../icon/icon-check-circle-fill/index.js\";\nimport IconCopy from \"../icon/icon-copy/index.js\";\nimport IconEdit from \"../icon/icon-edit/index.js\";\nimport { getPrefixCls } from \"../_utils/global-config.js\";\nimport { useI18n } from \"../locale/index.js\";\nimport _export_sfc from \"../_virtual/plugin-vue_export-helper.js\";\n\nconst _sfc_main = defineComponent({\n  name: \"TypographyOperations\",\n  components: {\n    Tooltip,\n    IconCheckCircleFill,\n    IconCopy,\n    IconEdit\n  },\n  props: {\n    editable: Boolean,\n    copyable: Boolean,\n    expandable: Boolean,\n    isCopied: Boolean,\n    isEllipsis: Boolean,\n    expanded: Boolean,\n    forceRenderExpand: Boolean,\n    editTooltipProps: Object,\n    copyTooltipProps: Object\n  },\n  emits: {\n    edit: () => true,\n    copy: () => true,\n    expand: () => true\n  },\n\n  setup(props, {\n    emit\n  }) {\n    const prefixCls = getPrefixCls(\"typography\");\n    const showExpand = computed(() => props.forceRenderExpand || props.expandable && props.isEllipsis);\n    const {\n      t\n    } = useI18n();\n    return {\n      prefixCls,\n      showExpand,\n      t,\n\n      onEditClick() {\n        emit(\"edit\");\n      },\n\n      onCopyClick() {\n        emit(\"copy\");\n      },\n\n      onExpandClick() {\n        emit(\"expand\");\n      }\n\n    };\n  }\n\n});\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_IconEdit = resolveComponent(\"IconEdit\");\n\n  const _component_Tooltip = resolveComponent(\"Tooltip\");\n\n  const _component_IconCheckCircleFill = resolveComponent(\"IconCheckCircleFill\");\n\n  const _component_IconCopy = resolveComponent(\"IconCopy\");\n\n  return openBlock(), createElementBlock(Fragment, null, [_ctx.editable ? (openBlock(), createBlock(_component_Tooltip, mergeProps({\n    key: 0,\n    content: _ctx.t(\"typography.edit\")\n  }, _ctx.editTooltipProps), {\n    default: withCtx(() => [createElementVNode(\"span\", {\n      class: normalizeClass(`${_ctx.prefixCls}-operation-edit`),\n      onClick: _cache[0] || (_cache[0] = (...args) => _ctx.onEditClick && _ctx.onEditClick(...args))\n    }, [createVNode(_component_IconEdit)], 2)]),\n    _: 1\n  }, 16, [\"content\"])) : createCommentVNode(\"v-if\", true), _ctx.copyable ? (openBlock(), createBlock(_component_Tooltip, normalizeProps(mergeProps({\n    key: 1\n  }, _ctx.copyTooltipProps)), {\n    content: withCtx(() => [renderSlot(_ctx.$slots, \"copy-tooltip\", {\n      copied: _ctx.isCopied\n    }, () => [createTextVNode(toDisplayString(_ctx.isCopied ? _ctx.t(\"typography.copied\") : _ctx.t(\"typography.copy\")), 1)])]),\n    default: withCtx(() => [createElementVNode(\"span\", {\n      class: normalizeClass({\n        [`${_ctx.prefixCls}-operation-copied`]: _ctx.isCopied,\n        [`${_ctx.prefixCls}-operation-copy`]: !_ctx.isCopied\n      }),\n      onClick: _cache[1] || (_cache[1] = (...args) => _ctx.onCopyClick && _ctx.onCopyClick(...args))\n    }, [renderSlot(_ctx.$slots, \"copy-icon\", {\n      copied: _ctx.isCopied\n    }, () => [_ctx.isCopied ? (openBlock(), createBlock(_component_IconCheckCircleFill, {\n      key: 0\n    })) : (openBlock(), createBlock(_component_IconCopy, {\n      key: 1\n    }))])], 2)]),\n    _: 3\n  }, 16)) : createCommentVNode(\"v-if\", true), _ctx.showExpand ? (openBlock(), createElementBlock(\"a\", {\n    key: 2,\n    class: normalizeClass(`${_ctx.prefixCls}-operation-expand`),\n    onClick: _cache[2] || (_cache[2] = (...args) => _ctx.onExpandClick && _ctx.onExpandClick(...args))\n  }, [renderSlot(_ctx.$slots, \"expand-node\", {\n    expanded: _ctx.expanded\n  }, () => [createTextVNode(toDisplayString(_ctx.expanded ? _ctx.t(\"typography.collapse\") : _ctx.t(\"typography.expand\")), 1)])], 2)) : createCommentVNode(\"v-if\", true)], 64);\n}\n\nvar Operations = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\n\nexport { Operations as default };","map":{"version":3,"names":["defineComponent","computed","resolveComponent","openBlock","createElementBlock","Fragment","createBlock","mergeProps","withCtx","createElementVNode","normalizeClass","createVNode","createCommentVNode","normalizeProps","renderSlot","createTextVNode","toDisplayString","Tooltip","IconCheckCircleFill","IconCopy","IconEdit","getPrefixCls","useI18n","_export_sfc","_sfc_main","name","components","props","editable","Boolean","copyable","expandable","isCopied","isEllipsis","expanded","forceRenderExpand","editTooltipProps","Object","copyTooltipProps","emits","edit","copy","expand","setup","emit","prefixCls","showExpand","t","onEditClick","onCopyClick","onExpandClick","_sfc_render","_ctx","_cache","$props","$setup","$data","$options","_component_IconEdit","_component_Tooltip","_component_IconCheckCircleFill","_component_IconCopy","key","content","default","class","onClick","args","_","$slots","copied","Operations"],"sources":["/www/wwwroot/admin/node_modules/@arco-design/web-vue/es/typography/operations.js"],"sourcesContent":["import { defineComponent, computed, resolveComponent, openBlock, createElementBlock, Fragment, createBlock, mergeProps, withCtx, createElementVNode, normalizeClass, createVNode, createCommentVNode, normalizeProps, renderSlot, createTextVNode, toDisplayString } from \"vue\";\nimport Tooltip from \"../tooltip/index.js\";\nimport IconCheckCircleFill from \"../icon/icon-check-circle-fill/index.js\";\nimport IconCopy from \"../icon/icon-copy/index.js\";\nimport IconEdit from \"../icon/icon-edit/index.js\";\nimport { getPrefixCls } from \"../_utils/global-config.js\";\nimport { useI18n } from \"../locale/index.js\";\nimport _export_sfc from \"../_virtual/plugin-vue_export-helper.js\";\nconst _sfc_main = defineComponent({\n  name: \"TypographyOperations\",\n  components: {\n    Tooltip,\n    IconCheckCircleFill,\n    IconCopy,\n    IconEdit\n  },\n  props: {\n    editable: Boolean,\n    copyable: Boolean,\n    expandable: Boolean,\n    isCopied: Boolean,\n    isEllipsis: Boolean,\n    expanded: Boolean,\n    forceRenderExpand: Boolean,\n    editTooltipProps: Object,\n    copyTooltipProps: Object\n  },\n  emits: {\n    edit: () => true,\n    copy: () => true,\n    expand: () => true\n  },\n  setup(props, { emit }) {\n    const prefixCls = getPrefixCls(\"typography\");\n    const showExpand = computed(() => props.forceRenderExpand || props.expandable && props.isEllipsis);\n    const { t } = useI18n();\n    return {\n      prefixCls,\n      showExpand,\n      t,\n      onEditClick() {\n        emit(\"edit\");\n      },\n      onCopyClick() {\n        emit(\"copy\");\n      },\n      onExpandClick() {\n        emit(\"expand\");\n      }\n    };\n  }\n});\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_IconEdit = resolveComponent(\"IconEdit\");\n  const _component_Tooltip = resolveComponent(\"Tooltip\");\n  const _component_IconCheckCircleFill = resolveComponent(\"IconCheckCircleFill\");\n  const _component_IconCopy = resolveComponent(\"IconCopy\");\n  return openBlock(), createElementBlock(Fragment, null, [\n    _ctx.editable ? (openBlock(), createBlock(_component_Tooltip, mergeProps({\n      key: 0,\n      content: _ctx.t(\"typography.edit\")\n    }, _ctx.editTooltipProps), {\n      default: withCtx(() => [\n        createElementVNode(\"span\", {\n          class: normalizeClass(`${_ctx.prefixCls}-operation-edit`),\n          onClick: _cache[0] || (_cache[0] = (...args) => _ctx.onEditClick && _ctx.onEditClick(...args))\n        }, [\n          createVNode(_component_IconEdit)\n        ], 2)\n      ]),\n      _: 1\n    }, 16, [\"content\"])) : createCommentVNode(\"v-if\", true),\n    _ctx.copyable ? (openBlock(), createBlock(_component_Tooltip, normalizeProps(mergeProps({ key: 1 }, _ctx.copyTooltipProps)), {\n      content: withCtx(() => [\n        renderSlot(_ctx.$slots, \"copy-tooltip\", { copied: _ctx.isCopied }, () => [\n          createTextVNode(toDisplayString(_ctx.isCopied ? _ctx.t(\"typography.copied\") : _ctx.t(\"typography.copy\")), 1)\n        ])\n      ]),\n      default: withCtx(() => [\n        createElementVNode(\"span\", {\n          class: normalizeClass({\n            [`${_ctx.prefixCls}-operation-copied`]: _ctx.isCopied,\n            [`${_ctx.prefixCls}-operation-copy`]: !_ctx.isCopied\n          }),\n          onClick: _cache[1] || (_cache[1] = (...args) => _ctx.onCopyClick && _ctx.onCopyClick(...args))\n        }, [\n          renderSlot(_ctx.$slots, \"copy-icon\", { copied: _ctx.isCopied }, () => [\n            _ctx.isCopied ? (openBlock(), createBlock(_component_IconCheckCircleFill, { key: 0 })) : (openBlock(), createBlock(_component_IconCopy, { key: 1 }))\n          ])\n        ], 2)\n      ]),\n      _: 3\n    }, 16)) : createCommentVNode(\"v-if\", true),\n    _ctx.showExpand ? (openBlock(), createElementBlock(\"a\", {\n      key: 2,\n      class: normalizeClass(`${_ctx.prefixCls}-operation-expand`),\n      onClick: _cache[2] || (_cache[2] = (...args) => _ctx.onExpandClick && _ctx.onExpandClick(...args))\n    }, [\n      renderSlot(_ctx.$slots, \"expand-node\", { expanded: _ctx.expanded }, () => [\n        createTextVNode(toDisplayString(_ctx.expanded ? _ctx.t(\"typography.collapse\") : _ctx.t(\"typography.expand\")), 1)\n      ])\n    ], 2)) : createCommentVNode(\"v-if\", true)\n  ], 64);\n}\nvar Operations = /* @__PURE__ */ _export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\nexport { Operations as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}