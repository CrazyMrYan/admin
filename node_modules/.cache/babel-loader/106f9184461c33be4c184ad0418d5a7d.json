{"ast":null,"code":"import { ref, computed } from \"vue\";\nimport { isString } from \"../../_utils/is.js\";\n\nconst useSorter = ({\n  columns,\n  onSorterChange\n}) => {\n  const _sorter = ref(getDefaultSorter(columns.value));\n\n  const computedSorter = computed(() => {\n    var _a;\n\n    for (const item of columns.value) {\n      if (item.dataIndex && item.sortable) {\n        const direction = isString(item.sortable.sortOrder) ? item.sortable.sortOrder : ((_a = _sorter.value) == null ? void 0 : _a.field) === item.dataIndex ? _sorter.value.direction : \"\";\n\n        if (direction) {\n          return {\n            field: item.dataIndex,\n            direction\n          };\n        }\n      }\n    }\n\n    return void 0;\n  });\n\n  const resetSorters = () => {\n    var _a;\n\n    let sorter;\n\n    for (const item of columns.value) {\n      if (item.dataIndex && item.sortable) {\n        if (!sorter && item.sortable.defaultSortOrder) {\n          sorter = {\n            field: item.dataIndex,\n            direction: item.sortable.defaultSortOrder\n          };\n        }\n\n        onSorterChange(item.dataIndex, (_a = item.sortable.defaultSortOrder) != null ? _a : \"\");\n      }\n    }\n\n    _sorter.value = sorter;\n  };\n\n  const clearSorters = () => {\n    for (const item of columns.value) {\n      if (item.dataIndex && item.sortable) {\n        onSorterChange(item.dataIndex, \"\");\n      }\n    }\n  };\n\n  return {\n    _sorter,\n    computedSorter,\n    resetSorters,\n    clearSorters\n  };\n};\n\nconst getDefaultSorter = columns => {\n  var _a;\n\n  for (const item of columns) {\n    if (item.dataIndex && ((_a = item.sortable) == null ? void 0 : _a.defaultSortOrder)) {\n      return {\n        field: item.dataIndex,\n        direction: item.sortable.defaultSortOrder\n      };\n    }\n  }\n\n  return void 0;\n};\n\nexport { useSorter };","map":{"version":3,"names":["ref","computed","isString","useSorter","columns","onSorterChange","_sorter","getDefaultSorter","value","computedSorter","_a","item","dataIndex","sortable","direction","sortOrder","field","resetSorters","sorter","defaultSortOrder","clearSorters"],"sources":["/www/wwwroot/admin/node_modules/@arco-design/web-vue/es/table/hooks/use-sorter.js"],"sourcesContent":["import { ref, computed } from \"vue\";\nimport { isString } from \"../../_utils/is.js\";\nconst useSorter = ({\n  columns,\n  onSorterChange\n}) => {\n  const _sorter = ref(getDefaultSorter(columns.value));\n  const computedSorter = computed(() => {\n    var _a;\n    for (const item of columns.value) {\n      if (item.dataIndex && item.sortable) {\n        const direction = isString(item.sortable.sortOrder) ? item.sortable.sortOrder : ((_a = _sorter.value) == null ? void 0 : _a.field) === item.dataIndex ? _sorter.value.direction : \"\";\n        if (direction) {\n          return {\n            field: item.dataIndex,\n            direction\n          };\n        }\n      }\n    }\n    return void 0;\n  });\n  const resetSorters = () => {\n    var _a;\n    let sorter;\n    for (const item of columns.value) {\n      if (item.dataIndex && item.sortable) {\n        if (!sorter && item.sortable.defaultSortOrder) {\n          sorter = {\n            field: item.dataIndex,\n            direction: item.sortable.defaultSortOrder\n          };\n        }\n        onSorterChange(item.dataIndex, (_a = item.sortable.defaultSortOrder) != null ? _a : \"\");\n      }\n    }\n    _sorter.value = sorter;\n  };\n  const clearSorters = () => {\n    for (const item of columns.value) {\n      if (item.dataIndex && item.sortable) {\n        onSorterChange(item.dataIndex, \"\");\n      }\n    }\n  };\n  return {\n    _sorter,\n    computedSorter,\n    resetSorters,\n    clearSorters\n  };\n};\nconst getDefaultSorter = (columns) => {\n  var _a;\n  for (const item of columns) {\n    if (item.dataIndex && ((_a = item.sortable) == null ? void 0 : _a.defaultSortOrder)) {\n      return {\n        field: item.dataIndex,\n        direction: item.sortable.defaultSortOrder\n      };\n    }\n  }\n  return void 0;\n};\nexport { useSorter };\n"],"mappings":"AAAA,SAASA,GAAT,EAAcC,QAAd,QAA8B,KAA9B;AACA,SAASC,QAAT,QAAyB,oBAAzB;;AACA,MAAMC,SAAS,GAAG,CAAC;EACjBC,OADiB;EAEjBC;AAFiB,CAAD,KAGZ;EACJ,MAAMC,OAAO,GAAGN,GAAG,CAACO,gBAAgB,CAACH,OAAO,CAACI,KAAT,CAAjB,CAAnB;;EACA,MAAMC,cAAc,GAAGR,QAAQ,CAAC,MAAM;IACpC,IAAIS,EAAJ;;IACA,KAAK,MAAMC,IAAX,IAAmBP,OAAO,CAACI,KAA3B,EAAkC;MAChC,IAAIG,IAAI,CAACC,SAAL,IAAkBD,IAAI,CAACE,QAA3B,EAAqC;QACnC,MAAMC,SAAS,GAAGZ,QAAQ,CAACS,IAAI,CAACE,QAAL,CAAcE,SAAf,CAAR,GAAoCJ,IAAI,CAACE,QAAL,CAAcE,SAAlD,GAA8D,CAAC,CAACL,EAAE,GAAGJ,OAAO,CAACE,KAAd,KAAwB,IAAxB,GAA+B,KAAK,CAApC,GAAwCE,EAAE,CAACM,KAA5C,MAAuDL,IAAI,CAACC,SAA5D,GAAwEN,OAAO,CAACE,KAAR,CAAcM,SAAtF,GAAkG,EAAlL;;QACA,IAAIA,SAAJ,EAAe;UACb,OAAO;YACLE,KAAK,EAAEL,IAAI,CAACC,SADP;YAELE;UAFK,CAAP;QAID;MACF;IACF;;IACD,OAAO,KAAK,CAAZ;EACD,CAd8B,CAA/B;;EAeA,MAAMG,YAAY,GAAG,MAAM;IACzB,IAAIP,EAAJ;;IACA,IAAIQ,MAAJ;;IACA,KAAK,MAAMP,IAAX,IAAmBP,OAAO,CAACI,KAA3B,EAAkC;MAChC,IAAIG,IAAI,CAACC,SAAL,IAAkBD,IAAI,CAACE,QAA3B,EAAqC;QACnC,IAAI,CAACK,MAAD,IAAWP,IAAI,CAACE,QAAL,CAAcM,gBAA7B,EAA+C;UAC7CD,MAAM,GAAG;YACPF,KAAK,EAAEL,IAAI,CAACC,SADL;YAEPE,SAAS,EAAEH,IAAI,CAACE,QAAL,CAAcM;UAFlB,CAAT;QAID;;QACDd,cAAc,CAACM,IAAI,CAACC,SAAN,EAAiB,CAACF,EAAE,GAAGC,IAAI,CAACE,QAAL,CAAcM,gBAApB,KAAyC,IAAzC,GAAgDT,EAAhD,GAAqD,EAAtE,CAAd;MACD;IACF;;IACDJ,OAAO,CAACE,KAAR,GAAgBU,MAAhB;EACD,CAfD;;EAgBA,MAAME,YAAY,GAAG,MAAM;IACzB,KAAK,MAAMT,IAAX,IAAmBP,OAAO,CAACI,KAA3B,EAAkC;MAChC,IAAIG,IAAI,CAACC,SAAL,IAAkBD,IAAI,CAACE,QAA3B,EAAqC;QACnCR,cAAc,CAACM,IAAI,CAACC,SAAN,EAAiB,EAAjB,CAAd;MACD;IACF;EACF,CAND;;EAOA,OAAO;IACLN,OADK;IAELG,cAFK;IAGLQ,YAHK;IAILG;EAJK,CAAP;AAMD,CAjDD;;AAkDA,MAAMb,gBAAgB,GAAIH,OAAD,IAAa;EACpC,IAAIM,EAAJ;;EACA,KAAK,MAAMC,IAAX,IAAmBP,OAAnB,EAA4B;IAC1B,IAAIO,IAAI,CAACC,SAAL,KAAmB,CAACF,EAAE,GAAGC,IAAI,CAACE,QAAX,KAAwB,IAAxB,GAA+B,KAAK,CAApC,GAAwCH,EAAE,CAACS,gBAA9D,CAAJ,EAAqF;MACnF,OAAO;QACLH,KAAK,EAAEL,IAAI,CAACC,SADP;QAELE,SAAS,EAAEH,IAAI,CAACE,QAAL,CAAcM;MAFpB,CAAP;IAID;EACF;;EACD,OAAO,KAAK,CAAZ;AACD,CAXD;;AAYA,SAAShB,SAAT"},"metadata":{},"sourceType":"module"}