{"ast":null,"code":"const isEqualObject = (obj, other) => {\n  if (!obj || !other) {\n    return false;\n  }\n\n  if (obj.length !== other.length) {\n    return false;\n  }\n\n  for (const key of Object.keys(obj)) {\n    const result = isEqual(obj[key], other[key]);\n    if (!result) return false;\n  }\n\n  return true;\n};\n\nconst isEqualArray = (arr, other) => {\n  if (!arr || !other) {\n    return false;\n  }\n\n  const {\n    length\n  } = arr;\n\n  if (length !== other.length) {\n    return false;\n  }\n\n  for (let i = 0; i < length; i++) {\n    const result = isEqual(arr[i], other[i]);\n    if (!result) return false;\n  }\n\n  return true;\n};\n\nconst isEqual = (a, b) => {\n  const type = Object.prototype.toString.call(a);\n\n  if (type !== Object.prototype.toString.call(b)) {\n    return false;\n  }\n\n  if (type === \"[object Object]\") {\n    return isEqualObject(a, b);\n  }\n\n  if (type === \"[object Array]\") {\n    return isEqualArray(a, b);\n  }\n\n  if (type === \"[object Function]\") {\n    if (a === b) {\n      return true;\n    }\n\n    return a.toString() === b.toString();\n  }\n\n  return a === b;\n};\n\nexport { isEqual, isEqualArray, isEqualObject };","map":{"version":3,"names":["isEqualObject","obj","other","length","key","Object","keys","result","isEqual","isEqualArray","arr","i","a","b","type","prototype","toString","call"],"sources":["/www/wwwroot/admin/node_modules/@arco-design/web-vue/es/_utils/is-equal.js"],"sourcesContent":["const isEqualObject = (obj, other) => {\n  if (!obj || !other) {\n    return false;\n  }\n  if (obj.length !== other.length) {\n    return false;\n  }\n  for (const key of Object.keys(obj)) {\n    const result = isEqual(obj[key], other[key]);\n    if (!result)\n      return false;\n  }\n  return true;\n};\nconst isEqualArray = (arr, other) => {\n  if (!arr || !other) {\n    return false;\n  }\n  const { length } = arr;\n  if (length !== other.length) {\n    return false;\n  }\n  for (let i = 0; i < length; i++) {\n    const result = isEqual(arr[i], other[i]);\n    if (!result)\n      return false;\n  }\n  return true;\n};\nconst isEqual = (a, b) => {\n  const type = Object.prototype.toString.call(a);\n  if (type !== Object.prototype.toString.call(b)) {\n    return false;\n  }\n  if (type === \"[object Object]\") {\n    return isEqualObject(a, b);\n  }\n  if (type === \"[object Array]\") {\n    return isEqualArray(a, b);\n  }\n  if (type === \"[object Function]\") {\n    if (a === b) {\n      return true;\n    }\n    return a.toString() === b.toString();\n  }\n  return a === b;\n};\nexport { isEqual, isEqualArray, isEqualObject };\n"],"mappings":"AAAA,MAAMA,aAAa,GAAG,CAACC,GAAD,EAAMC,KAAN,KAAgB;EACpC,IAAI,CAACD,GAAD,IAAQ,CAACC,KAAb,EAAoB;IAClB,OAAO,KAAP;EACD;;EACD,IAAID,GAAG,CAACE,MAAJ,KAAeD,KAAK,CAACC,MAAzB,EAAiC;IAC/B,OAAO,KAAP;EACD;;EACD,KAAK,MAAMC,GAAX,IAAkBC,MAAM,CAACC,IAAP,CAAYL,GAAZ,CAAlB,EAAoC;IAClC,MAAMM,MAAM,GAAGC,OAAO,CAACP,GAAG,CAACG,GAAD,CAAJ,EAAWF,KAAK,CAACE,GAAD,CAAhB,CAAtB;IACA,IAAI,CAACG,MAAL,EACE,OAAO,KAAP;EACH;;EACD,OAAO,IAAP;AACD,CAbD;;AAcA,MAAME,YAAY,GAAG,CAACC,GAAD,EAAMR,KAAN,KAAgB;EACnC,IAAI,CAACQ,GAAD,IAAQ,CAACR,KAAb,EAAoB;IAClB,OAAO,KAAP;EACD;;EACD,MAAM;IAAEC;EAAF,IAAaO,GAAnB;;EACA,IAAIP,MAAM,KAAKD,KAAK,CAACC,MAArB,EAA6B;IAC3B,OAAO,KAAP;EACD;;EACD,KAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,MAApB,EAA4BQ,CAAC,EAA7B,EAAiC;IAC/B,MAAMJ,MAAM,GAAGC,OAAO,CAACE,GAAG,CAACC,CAAD,CAAJ,EAAST,KAAK,CAACS,CAAD,CAAd,CAAtB;IACA,IAAI,CAACJ,MAAL,EACE,OAAO,KAAP;EACH;;EACD,OAAO,IAAP;AACD,CAdD;;AAeA,MAAMC,OAAO,GAAG,CAACI,CAAD,EAAIC,CAAJ,KAAU;EACxB,MAAMC,IAAI,GAAGT,MAAM,CAACU,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BL,CAA/B,CAAb;;EACA,IAAIE,IAAI,KAAKT,MAAM,CAACU,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BJ,CAA/B,CAAb,EAAgD;IAC9C,OAAO,KAAP;EACD;;EACD,IAAIC,IAAI,KAAK,iBAAb,EAAgC;IAC9B,OAAOd,aAAa,CAACY,CAAD,EAAIC,CAAJ,CAApB;EACD;;EACD,IAAIC,IAAI,KAAK,gBAAb,EAA+B;IAC7B,OAAOL,YAAY,CAACG,CAAD,EAAIC,CAAJ,CAAnB;EACD;;EACD,IAAIC,IAAI,KAAK,mBAAb,EAAkC;IAChC,IAAIF,CAAC,KAAKC,CAAV,EAAa;MACX,OAAO,IAAP;IACD;;IACD,OAAOD,CAAC,CAACI,QAAF,OAAiBH,CAAC,CAACG,QAAF,EAAxB;EACD;;EACD,OAAOJ,CAAC,KAAKC,CAAb;AACD,CAlBD;;AAmBA,SAASL,OAAT,EAAkBC,YAAlB,EAAgCT,aAAhC"},"metadata":{},"sourceType":"module"}