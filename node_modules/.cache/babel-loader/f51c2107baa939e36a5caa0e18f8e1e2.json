{"ast":null,"code":"import { defineComponent, inject, computed, createVNode } from \"vue\";\nimport { getOperationStyle, getOperationFixedCls } from \"./utils.js\";\nimport { getPrefixCls } from \"../_utils/global-config.js\";\nimport Checkbox from \"../checkbox/index.js\";\nimport { isFunction } from \"../_utils/is.js\";\nimport { tableInjectionKey } from \"./context.js\";\nvar OperationTh = defineComponent({\n  name: \"OperationTh\",\n  props: {\n    operationColumn: {\n      type: Object,\n      required: true\n    },\n    operations: {\n      type: Array,\n      required: true\n    },\n    rowSpan: {\n      type: Number,\n      default: 1\n    },\n    selectAll: {\n      type: Boolean,\n      default: false\n    }\n  },\n\n  setup(props) {\n    const prefixCls = getPrefixCls(\"table\");\n    const tableCtx = inject(tableInjectionKey, {});\n    const checkboxStatus = computed(() => {\n      var _a, _b, _c, _d;\n\n      let checked = false;\n      let indeterminate = false;\n      const selectedNumber = (_b = (_a = tableCtx.currentSelectedRowKeys) == null ? void 0 : _a.length) != null ? _b : 0;\n      const totalEnabledNumber = (_d = (_c = tableCtx.currentAllEnabledRowKeys) == null ? void 0 : _c.length) != null ? _d : 0;\n\n      if (selectedNumber > 0) {\n        if (selectedNumber >= totalEnabledNumber) {\n          checked = true;\n        } else {\n          indeterminate = true;\n        }\n      }\n\n      return {\n        checked,\n        indeterminate\n      };\n    });\n\n    const renderContent = () => {\n      if (props.selectAll) {\n        return createVNode(Checkbox, {\n          \"modelValue\": checkboxStatus.value.checked,\n          \"indeterminate\": checkboxStatus.value.indeterminate,\n          \"uninjectGroupContext\": true,\n          \"onChange\": checked => {\n            var _a;\n\n            (_a = tableCtx.onSelectAll) == null ? void 0 : _a.call(tableCtx, checked);\n          }\n        }, {\n          default: isFunction(props.operationColumn.title) ? props.operationColumn.title() : props.operationColumn.title\n        });\n      }\n\n      if (props.operationColumn.title) {\n        return isFunction(props.operationColumn.title) ? props.operationColumn.title() : props.operationColumn.title;\n      }\n\n      return null;\n    };\n\n    const style = computed(() => getOperationStyle(props.operationColumn, props.operations));\n    const cls = computed(() => [`${prefixCls}-th`, `${prefixCls}-operation`, {\n      [`${prefixCls}-checkbox`]: props.selectAll\n    }, ...getOperationFixedCls(prefixCls, props.operationColumn)]);\n    return () => createVNode(\"th\", {\n      \"class\": cls.value,\n      \"style\": style.value,\n      \"rowspan\": props.rowSpan > 1 ? props.rowSpan : void 0\n    }, [createVNode(\"span\", {\n      \"class\": `${prefixCls}-cell`\n    }, [renderContent()])]);\n  }\n\n});\nexport { OperationTh as default };","map":{"version":3,"names":["defineComponent","inject","computed","createVNode","getOperationStyle","getOperationFixedCls","getPrefixCls","Checkbox","isFunction","tableInjectionKey","OperationTh","name","props","operationColumn","type","Object","required","operations","Array","rowSpan","Number","default","selectAll","Boolean","setup","prefixCls","tableCtx","checkboxStatus","_a","_b","_c","_d","checked","indeterminate","selectedNumber","currentSelectedRowKeys","length","totalEnabledNumber","currentAllEnabledRowKeys","renderContent","value","onSelectAll","call","title","style","cls"],"sources":["/www/wwwroot/admin/node_modules/@arco-design/web-vue/es/table/table-operation-th.js"],"sourcesContent":["import { defineComponent, inject, computed, createVNode } from \"vue\";\nimport { getOperationStyle, getOperationFixedCls } from \"./utils.js\";\nimport { getPrefixCls } from \"../_utils/global-config.js\";\nimport Checkbox from \"../checkbox/index.js\";\nimport { isFunction } from \"../_utils/is.js\";\nimport { tableInjectionKey } from \"./context.js\";\nvar OperationTh = defineComponent({\n  name: \"OperationTh\",\n  props: {\n    operationColumn: {\n      type: Object,\n      required: true\n    },\n    operations: {\n      type: Array,\n      required: true\n    },\n    rowSpan: {\n      type: Number,\n      default: 1\n    },\n    selectAll: {\n      type: Boolean,\n      default: false\n    }\n  },\n  setup(props) {\n    const prefixCls = getPrefixCls(\"table\");\n    const tableCtx = inject(tableInjectionKey, {});\n    const checkboxStatus = computed(() => {\n      var _a, _b, _c, _d;\n      let checked = false;\n      let indeterminate = false;\n      const selectedNumber = (_b = (_a = tableCtx.currentSelectedRowKeys) == null ? void 0 : _a.length) != null ? _b : 0;\n      const totalEnabledNumber = (_d = (_c = tableCtx.currentAllEnabledRowKeys) == null ? void 0 : _c.length) != null ? _d : 0;\n      if (selectedNumber > 0) {\n        if (selectedNumber >= totalEnabledNumber) {\n          checked = true;\n        } else {\n          indeterminate = true;\n        }\n      }\n      return {\n        checked,\n        indeterminate\n      };\n    });\n    const renderContent = () => {\n      if (props.selectAll) {\n        return createVNode(Checkbox, {\n          \"modelValue\": checkboxStatus.value.checked,\n          \"indeterminate\": checkboxStatus.value.indeterminate,\n          \"uninjectGroupContext\": true,\n          \"onChange\": (checked) => {\n            var _a;\n            (_a = tableCtx.onSelectAll) == null ? void 0 : _a.call(tableCtx, checked);\n          }\n        }, {\n          default: isFunction(props.operationColumn.title) ? props.operationColumn.title() : props.operationColumn.title\n        });\n      }\n      if (props.operationColumn.title) {\n        return isFunction(props.operationColumn.title) ? props.operationColumn.title() : props.operationColumn.title;\n      }\n      return null;\n    };\n    const style = computed(() => getOperationStyle(props.operationColumn, props.operations));\n    const cls = computed(() => [`${prefixCls}-th`, `${prefixCls}-operation`, {\n      [`${prefixCls}-checkbox`]: props.selectAll\n    }, ...getOperationFixedCls(prefixCls, props.operationColumn)]);\n    return () => createVNode(\"th\", {\n      \"class\": cls.value,\n      \"style\": style.value,\n      \"rowspan\": props.rowSpan > 1 ? props.rowSpan : void 0\n    }, [createVNode(\"span\", {\n      \"class\": `${prefixCls}-cell`\n    }, [renderContent()])]);\n  }\n});\nexport { OperationTh as default };\n"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,MAA1B,EAAkCC,QAAlC,EAA4CC,WAA5C,QAA+D,KAA/D;AACA,SAASC,iBAAT,EAA4BC,oBAA5B,QAAwD,YAAxD;AACA,SAASC,YAAT,QAA6B,4BAA7B;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,iBAAT,QAAkC,cAAlC;AACA,IAAIC,WAAW,GAAGV,eAAe,CAAC;EAChCW,IAAI,EAAE,aAD0B;EAEhCC,KAAK,EAAE;IACLC,eAAe,EAAE;MACfC,IAAI,EAAEC,MADS;MAEfC,QAAQ,EAAE;IAFK,CADZ;IAKLC,UAAU,EAAE;MACVH,IAAI,EAAEI,KADI;MAEVF,QAAQ,EAAE;IAFA,CALP;IASLG,OAAO,EAAE;MACPL,IAAI,EAAEM,MADC;MAEPC,OAAO,EAAE;IAFF,CATJ;IAaLC,SAAS,EAAE;MACTR,IAAI,EAAES,OADG;MAETF,OAAO,EAAE;IAFA;EAbN,CAFyB;;EAoBhCG,KAAK,CAACZ,KAAD,EAAQ;IACX,MAAMa,SAAS,GAAGnB,YAAY,CAAC,OAAD,CAA9B;IACA,MAAMoB,QAAQ,GAAGzB,MAAM,CAACQ,iBAAD,EAAoB,EAApB,CAAvB;IACA,MAAMkB,cAAc,GAAGzB,QAAQ,CAAC,MAAM;MACpC,IAAI0B,EAAJ,EAAQC,EAAR,EAAYC,EAAZ,EAAgBC,EAAhB;;MACA,IAAIC,OAAO,GAAG,KAAd;MACA,IAAIC,aAAa,GAAG,KAApB;MACA,MAAMC,cAAc,GAAG,CAACL,EAAE,GAAG,CAACD,EAAE,GAAGF,QAAQ,CAACS,sBAAf,KAA0C,IAA1C,GAAiD,KAAK,CAAtD,GAA0DP,EAAE,CAACQ,MAAnE,KAA8E,IAA9E,GAAqFP,EAArF,GAA0F,CAAjH;MACA,MAAMQ,kBAAkB,GAAG,CAACN,EAAE,GAAG,CAACD,EAAE,GAAGJ,QAAQ,CAACY,wBAAf,KAA4C,IAA5C,GAAmD,KAAK,CAAxD,GAA4DR,EAAE,CAACM,MAArE,KAAgF,IAAhF,GAAuFL,EAAvF,GAA4F,CAAvH;;MACA,IAAIG,cAAc,GAAG,CAArB,EAAwB;QACtB,IAAIA,cAAc,IAAIG,kBAAtB,EAA0C;UACxCL,OAAO,GAAG,IAAV;QACD,CAFD,MAEO;UACLC,aAAa,GAAG,IAAhB;QACD;MACF;;MACD,OAAO;QACLD,OADK;QAELC;MAFK,CAAP;IAID,CAjB8B,CAA/B;;IAkBA,MAAMM,aAAa,GAAG,MAAM;MAC1B,IAAI3B,KAAK,CAACU,SAAV,EAAqB;QACnB,OAAOnB,WAAW,CAACI,QAAD,EAAW;UAC3B,cAAcoB,cAAc,CAACa,KAAf,CAAqBR,OADR;UAE3B,iBAAiBL,cAAc,CAACa,KAAf,CAAqBP,aAFX;UAG3B,wBAAwB,IAHG;UAI3B,YAAaD,OAAD,IAAa;YACvB,IAAIJ,EAAJ;;YACA,CAACA,EAAE,GAAGF,QAAQ,CAACe,WAAf,KAA+B,IAA/B,GAAsC,KAAK,CAA3C,GAA+Cb,EAAE,CAACc,IAAH,CAAQhB,QAAR,EAAkBM,OAAlB,CAA/C;UACD;QAP0B,CAAX,EAQf;UACDX,OAAO,EAAEb,UAAU,CAACI,KAAK,CAACC,eAAN,CAAsB8B,KAAvB,CAAV,GAA0C/B,KAAK,CAACC,eAAN,CAAsB8B,KAAtB,EAA1C,GAA0E/B,KAAK,CAACC,eAAN,CAAsB8B;QADxG,CARe,CAAlB;MAWD;;MACD,IAAI/B,KAAK,CAACC,eAAN,CAAsB8B,KAA1B,EAAiC;QAC/B,OAAOnC,UAAU,CAACI,KAAK,CAACC,eAAN,CAAsB8B,KAAvB,CAAV,GAA0C/B,KAAK,CAACC,eAAN,CAAsB8B,KAAtB,EAA1C,GAA0E/B,KAAK,CAACC,eAAN,CAAsB8B,KAAvG;MACD;;MACD,OAAO,IAAP;IACD,CAlBD;;IAmBA,MAAMC,KAAK,GAAG1C,QAAQ,CAAC,MAAME,iBAAiB,CAACQ,KAAK,CAACC,eAAP,EAAwBD,KAAK,CAACK,UAA9B,CAAxB,CAAtB;IACA,MAAM4B,GAAG,GAAG3C,QAAQ,CAAC,MAAM,CAAE,GAAEuB,SAAU,KAAd,EAAqB,GAAEA,SAAU,YAAjC,EAA8C;MACvE,CAAE,GAAEA,SAAU,WAAd,GAA2Bb,KAAK,CAACU;IADsC,CAA9C,EAExB,GAAGjB,oBAAoB,CAACoB,SAAD,EAAYb,KAAK,CAACC,eAAlB,CAFC,CAAP,CAApB;IAGA,OAAO,MAAMV,WAAW,CAAC,IAAD,EAAO;MAC7B,SAAS0C,GAAG,CAACL,KADgB;MAE7B,SAASI,KAAK,CAACJ,KAFc;MAG7B,WAAW5B,KAAK,CAACO,OAAN,GAAgB,CAAhB,GAAoBP,KAAK,CAACO,OAA1B,GAAoC,KAAK;IAHvB,CAAP,EAIrB,CAAChB,WAAW,CAAC,MAAD,EAAS;MACtB,SAAU,GAAEsB,SAAU;IADA,CAAT,EAEZ,CAACc,aAAa,EAAd,CAFY,CAAZ,CAJqB,CAAxB;EAOD;;AAvE+B,CAAD,CAAjC;AAyEA,SAAS7B,WAAW,IAAIW,OAAxB"},"metadata":{},"sourceType":"module"}