{"ast":null,"code":"import { toRefs, computed, watch } from \"vue\";\nimport { getDayjsValue } from \"../../_utils/date.js\";\nimport { isUndefined, isArray } from \"../../_utils/is.js\";\nimport useState from \"../../_hooks/use-state.js\";\n\nfunction useTimeState(props) {\n  const {\n    modelValue,\n    defaultValue,\n    format,\n    isRange\n  } = toRefs(props);\n\n  function getLocalEmptyValue() {\n    return isRange.value ? [] : void 0;\n  }\n\n  function normalizeValue(time) {\n    if (isUndefined(time)) {\n      return void 0;\n    }\n\n    if (isRange.value) {\n      return isArray(time) ? time : [time, void 0];\n    }\n\n    return time;\n  }\n\n  const computedModelValue = computed(() => {\n    const time = normalizeValue(modelValue.value);\n    return getDayjsValue(time, format.value);\n  });\n  const computedDefaultValue = computed(() => {\n    const time = normalizeValue(defaultValue.value);\n    return getDayjsValue(time, format.value);\n  });\n  const [localValue, setLocalValue] = useState(!isUndefined(computedModelValue.value) ? computedModelValue.value : !isUndefined(computedDefaultValue.value) ? computedDefaultValue.value : getLocalEmptyValue());\n  watch(computedModelValue, () => {\n    if (isUndefined(computedModelValue.value)) {\n      setLocalValue(getLocalEmptyValue());\n    }\n  });\n  const computedValue = computed(() => computedModelValue.value || localValue.value);\n  const [panelValue, setPanelValue] = useState(computedValue.value);\n  watch([computedValue], () => {\n    setPanelValue(computedValue.value);\n  });\n  const [inputValue, setInputValue] = useState();\n  watch([panelValue], () => {\n    setInputValue(void 0);\n  });\n  return {\n    computedValue,\n    panelValue,\n    inputValue,\n    setValue: setLocalValue,\n    setPanelValue,\n    setInputValue\n  };\n}\n\nexport { useTimeState as default };","map":{"version":3,"names":["toRefs","computed","watch","getDayjsValue","isUndefined","isArray","useState","useTimeState","props","modelValue","defaultValue","format","isRange","getLocalEmptyValue","value","normalizeValue","time","computedModelValue","computedDefaultValue","localValue","setLocalValue","computedValue","panelValue","setPanelValue","inputValue","setInputValue","setValue","default"],"sources":["/www/wwwroot/admin/node_modules/@arco-design/web-vue/es/time-picker/hooks/use-time-state.js"],"sourcesContent":["import { toRefs, computed, watch } from \"vue\";\nimport { getDayjsValue } from \"../../_utils/date.js\";\nimport { isUndefined, isArray } from \"../../_utils/is.js\";\nimport useState from \"../../_hooks/use-state.js\";\nfunction useTimeState(props) {\n  const { modelValue, defaultValue, format, isRange } = toRefs(props);\n  function getLocalEmptyValue() {\n    return isRange.value ? [] : void 0;\n  }\n  function normalizeValue(time) {\n    if (isUndefined(time)) {\n      return void 0;\n    }\n    if (isRange.value) {\n      return isArray(time) ? time : [time, void 0];\n    }\n    return time;\n  }\n  const computedModelValue = computed(() => {\n    const time = normalizeValue(modelValue.value);\n    return getDayjsValue(time, format.value);\n  });\n  const computedDefaultValue = computed(() => {\n    const time = normalizeValue(defaultValue.value);\n    return getDayjsValue(time, format.value);\n  });\n  const [localValue, setLocalValue] = useState(!isUndefined(computedModelValue.value) ? computedModelValue.value : !isUndefined(computedDefaultValue.value) ? computedDefaultValue.value : getLocalEmptyValue());\n  watch(computedModelValue, () => {\n    if (isUndefined(computedModelValue.value)) {\n      setLocalValue(getLocalEmptyValue());\n    }\n  });\n  const computedValue = computed(() => computedModelValue.value || localValue.value);\n  const [panelValue, setPanelValue] = useState(computedValue.value);\n  watch([computedValue], () => {\n    setPanelValue(computedValue.value);\n  });\n  const [inputValue, setInputValue] = useState();\n  watch([panelValue], () => {\n    setInputValue(void 0);\n  });\n  return {\n    computedValue,\n    panelValue,\n    inputValue,\n    setValue: setLocalValue,\n    setPanelValue,\n    setInputValue\n  };\n}\nexport { useTimeState as default };\n"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,QAAjB,EAA2BC,KAA3B,QAAwC,KAAxC;AACA,SAASC,aAAT,QAA8B,sBAA9B;AACA,SAASC,WAAT,EAAsBC,OAAtB,QAAqC,oBAArC;AACA,OAAOC,QAAP,MAAqB,2BAArB;;AACA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;EAC3B,MAAM;IAAEC,UAAF;IAAcC,YAAd;IAA4BC,MAA5B;IAAoCC;EAApC,IAAgDZ,MAAM,CAACQ,KAAD,CAA5D;;EACA,SAASK,kBAAT,GAA8B;IAC5B,OAAOD,OAAO,CAACE,KAAR,GAAgB,EAAhB,GAAqB,KAAK,CAAjC;EACD;;EACD,SAASC,cAAT,CAAwBC,IAAxB,EAA8B;IAC5B,IAAIZ,WAAW,CAACY,IAAD,CAAf,EAAuB;MACrB,OAAO,KAAK,CAAZ;IACD;;IACD,IAAIJ,OAAO,CAACE,KAAZ,EAAmB;MACjB,OAAOT,OAAO,CAACW,IAAD,CAAP,GAAgBA,IAAhB,GAAuB,CAACA,IAAD,EAAO,KAAK,CAAZ,CAA9B;IACD;;IACD,OAAOA,IAAP;EACD;;EACD,MAAMC,kBAAkB,GAAGhB,QAAQ,CAAC,MAAM;IACxC,MAAMe,IAAI,GAAGD,cAAc,CAACN,UAAU,CAACK,KAAZ,CAA3B;IACA,OAAOX,aAAa,CAACa,IAAD,EAAOL,MAAM,CAACG,KAAd,CAApB;EACD,CAHkC,CAAnC;EAIA,MAAMI,oBAAoB,GAAGjB,QAAQ,CAAC,MAAM;IAC1C,MAAMe,IAAI,GAAGD,cAAc,CAACL,YAAY,CAACI,KAAd,CAA3B;IACA,OAAOX,aAAa,CAACa,IAAD,EAAOL,MAAM,CAACG,KAAd,CAApB;EACD,CAHoC,CAArC;EAIA,MAAM,CAACK,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAAC,CAACF,WAAW,CAACa,kBAAkB,CAACH,KAApB,CAAZ,GAAyCG,kBAAkB,CAACH,KAA5D,GAAoE,CAACV,WAAW,CAACc,oBAAoB,CAACJ,KAAtB,CAAZ,GAA2CI,oBAAoB,CAACJ,KAAhE,GAAwED,kBAAkB,EAA/J,CAA5C;EACAX,KAAK,CAACe,kBAAD,EAAqB,MAAM;IAC9B,IAAIb,WAAW,CAACa,kBAAkB,CAACH,KAApB,CAAf,EAA2C;MACzCM,aAAa,CAACP,kBAAkB,EAAnB,CAAb;IACD;EACF,CAJI,CAAL;EAKA,MAAMQ,aAAa,GAAGpB,QAAQ,CAAC,MAAMgB,kBAAkB,CAACH,KAAnB,IAA4BK,UAAU,CAACL,KAA9C,CAA9B;EACA,MAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BjB,QAAQ,CAACe,aAAa,CAACP,KAAf,CAA5C;EACAZ,KAAK,CAAC,CAACmB,aAAD,CAAD,EAAkB,MAAM;IAC3BE,aAAa,CAACF,aAAa,CAACP,KAAf,CAAb;EACD,CAFI,CAAL;EAGA,MAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BnB,QAAQ,EAA5C;EACAJ,KAAK,CAAC,CAACoB,UAAD,CAAD,EAAe,MAAM;IACxBG,aAAa,CAAC,KAAK,CAAN,CAAb;EACD,CAFI,CAAL;EAGA,OAAO;IACLJ,aADK;IAELC,UAFK;IAGLE,UAHK;IAILE,QAAQ,EAAEN,aAJL;IAKLG,aALK;IAMLE;EANK,CAAP;AAQD;;AACD,SAASlB,YAAY,IAAIoB,OAAzB"},"metadata":{},"sourceType":"module"}