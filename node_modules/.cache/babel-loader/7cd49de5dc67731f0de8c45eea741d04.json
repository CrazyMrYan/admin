{"ast":null,"code":"import { computed } from \"vue\";\n\nconst useSpan = ({\n  spanMethod,\n  data,\n  columns\n}) => {\n  const tableSpan = computed(() => {\n    const span = {};\n\n    if (spanMethod.value) {\n      data.value.forEach((record, rowIndex) => {\n        columns.value.forEach((column, columnIndex) => {\n          var _a, _b;\n\n          const {\n            rowspan = 1,\n            colspan = 1\n          } = (_b = (_a = spanMethod.value) == null ? void 0 : _a.call(spanMethod, {\n            record: record.raw,\n            column,\n            rowIndex,\n            columnIndex\n          })) != null ? _b : {};\n\n          if (rowspan > 1 || colspan > 1) {\n            span[`${rowIndex}-${columnIndex}`] = [rowspan, colspan];\n          }\n        });\n      });\n    }\n\n    return span;\n  });\n  const removedCells = computed(() => {\n    const data2 = [];\n\n    for (const indexKey of Object.keys(tableSpan.value)) {\n      const indexArray = indexKey.split(\"-\").map(item => Number(item));\n      const span = tableSpan.value[indexKey];\n\n      for (let i = 1; i < span[0]; i++) {\n        data2.push(`${indexArray[0] + i}-${indexArray[1]}`);\n\n        for (let j = 1; j < span[1]; j++) {\n          data2.push(`${indexArray[0] + i}-${indexArray[1] + j}`);\n        }\n      }\n\n      for (let i = 1; i < span[1]; i++) {\n        data2.push(`${indexArray[0]}-${indexArray[1] + i}`);\n      }\n    }\n\n    return data2;\n  });\n  return {\n    tableSpan,\n    removedCells\n  };\n};\n\nexport { useSpan };","map":{"version":3,"names":["computed","useSpan","spanMethod","data","columns","tableSpan","span","value","forEach","record","rowIndex","column","columnIndex","_a","_b","rowspan","colspan","call","raw","removedCells","data2","indexKey","Object","keys","indexArray","split","map","item","Number","i","push","j"],"sources":["/www/wwwroot/admin/node_modules/@arco-design/web-vue/es/table/hooks/use-span.js"],"sourcesContent":["import { computed } from \"vue\";\nconst useSpan = ({\n  spanMethod,\n  data,\n  columns\n}) => {\n  const tableSpan = computed(() => {\n    const span = {};\n    if (spanMethod.value) {\n      data.value.forEach((record, rowIndex) => {\n        columns.value.forEach((column, columnIndex) => {\n          var _a, _b;\n          const { rowspan = 1, colspan = 1 } = (_b = (_a = spanMethod.value) == null ? void 0 : _a.call(spanMethod, {\n            record: record.raw,\n            column,\n            rowIndex,\n            columnIndex\n          })) != null ? _b : {};\n          if (rowspan > 1 || colspan > 1) {\n            span[`${rowIndex}-${columnIndex}`] = [rowspan, colspan];\n          }\n        });\n      });\n    }\n    return span;\n  });\n  const removedCells = computed(() => {\n    const data2 = [];\n    for (const indexKey of Object.keys(tableSpan.value)) {\n      const indexArray = indexKey.split(\"-\").map((item) => Number(item));\n      const span = tableSpan.value[indexKey];\n      for (let i = 1; i < span[0]; i++) {\n        data2.push(`${indexArray[0] + i}-${indexArray[1]}`);\n        for (let j = 1; j < span[1]; j++) {\n          data2.push(`${indexArray[0] + i}-${indexArray[1] + j}`);\n        }\n      }\n      for (let i = 1; i < span[1]; i++) {\n        data2.push(`${indexArray[0]}-${indexArray[1] + i}`);\n      }\n    }\n    return data2;\n  });\n  return {\n    tableSpan,\n    removedCells\n  };\n};\nexport { useSpan };\n"],"mappings":"AAAA,SAASA,QAAT,QAAyB,KAAzB;;AACA,MAAMC,OAAO,GAAG,CAAC;EACfC,UADe;EAEfC,IAFe;EAGfC;AAHe,CAAD,KAIV;EACJ,MAAMC,SAAS,GAAGL,QAAQ,CAAC,MAAM;IAC/B,MAAMM,IAAI,GAAG,EAAb;;IACA,IAAIJ,UAAU,CAACK,KAAf,EAAsB;MACpBJ,IAAI,CAACI,KAAL,CAAWC,OAAX,CAAmB,CAACC,MAAD,EAASC,QAAT,KAAsB;QACvCN,OAAO,CAACG,KAAR,CAAcC,OAAd,CAAsB,CAACG,MAAD,EAASC,WAAT,KAAyB;UAC7C,IAAIC,EAAJ,EAAQC,EAAR;;UACA,MAAM;YAAEC,OAAO,GAAG,CAAZ;YAAeC,OAAO,GAAG;UAAzB,IAA+B,CAACF,EAAE,GAAG,CAACD,EAAE,GAAGX,UAAU,CAACK,KAAjB,KAA2B,IAA3B,GAAkC,KAAK,CAAvC,GAA2CM,EAAE,CAACI,IAAH,CAAQf,UAAR,EAAoB;YACxGO,MAAM,EAAEA,MAAM,CAACS,GADyF;YAExGP,MAFwG;YAGxGD,QAHwG;YAIxGE;UAJwG,CAApB,CAAjD,KAK9B,IAL8B,GAKvBE,EALuB,GAKlB,EALnB;;UAMA,IAAIC,OAAO,GAAG,CAAV,IAAeC,OAAO,GAAG,CAA7B,EAAgC;YAC9BV,IAAI,CAAE,GAAEI,QAAS,IAAGE,WAAY,EAA5B,CAAJ,GAAqC,CAACG,OAAD,EAAUC,OAAV,CAArC;UACD;QACF,CAXD;MAYD,CAbD;IAcD;;IACD,OAAOV,IAAP;EACD,CAnByB,CAA1B;EAoBA,MAAMa,YAAY,GAAGnB,QAAQ,CAAC,MAAM;IAClC,MAAMoB,KAAK,GAAG,EAAd;;IACA,KAAK,MAAMC,QAAX,IAAuBC,MAAM,CAACC,IAAP,CAAYlB,SAAS,CAACE,KAAtB,CAAvB,EAAqD;MACnD,MAAMiB,UAAU,GAAGH,QAAQ,CAACI,KAAT,CAAe,GAAf,EAAoBC,GAApB,CAAyBC,IAAD,IAAUC,MAAM,CAACD,IAAD,CAAxC,CAAnB;MACA,MAAMrB,IAAI,GAAGD,SAAS,CAACE,KAAV,CAAgBc,QAAhB,CAAb;;MACA,KAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGvB,IAAI,CAAC,CAAD,CAAxB,EAA6BuB,CAAC,EAA9B,EAAkC;QAChCT,KAAK,CAACU,IAAN,CAAY,GAAEN,UAAU,CAAC,CAAD,CAAV,GAAgBK,CAAE,IAAGL,UAAU,CAAC,CAAD,CAAI,EAAjD;;QACA,KAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGzB,IAAI,CAAC,CAAD,CAAxB,EAA6ByB,CAAC,EAA9B,EAAkC;UAChCX,KAAK,CAACU,IAAN,CAAY,GAAEN,UAAU,CAAC,CAAD,CAAV,GAAgBK,CAAE,IAAGL,UAAU,CAAC,CAAD,CAAV,GAAgBO,CAAE,EAArD;QACD;MACF;;MACD,KAAK,IAAIF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGvB,IAAI,CAAC,CAAD,CAAxB,EAA6BuB,CAAC,EAA9B,EAAkC;QAChCT,KAAK,CAACU,IAAN,CAAY,GAAEN,UAAU,CAAC,CAAD,CAAI,IAAGA,UAAU,CAAC,CAAD,CAAV,GAAgBK,CAAE,EAAjD;MACD;IACF;;IACD,OAAOT,KAAP;EACD,CAhB4B,CAA7B;EAiBA,OAAO;IACLf,SADK;IAELc;EAFK,CAAP;AAID,CA9CD;;AA+CA,SAASlB,OAAT"},"metadata":{},"sourceType":"module"}