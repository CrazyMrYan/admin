{"ast":null,"code":"import { cloneVNode, isVNode, Fragment } from \"vue\";\nimport { isArray, isFunction, isString } from \"./is.js\";\nvar ShapeFlags;\n\n(function (ShapeFlags2) {\n  ShapeFlags2[ShapeFlags2[\"ELEMENT\"] = 1] = \"ELEMENT\";\n  ShapeFlags2[ShapeFlags2[\"FUNCTIONAL_COMPONENT\"] = 2] = \"FUNCTIONAL_COMPONENT\";\n  ShapeFlags2[ShapeFlags2[\"STATEFUL_COMPONENT\"] = 4] = \"STATEFUL_COMPONENT\";\n  ShapeFlags2[ShapeFlags2[\"COMPONENT\"] = 6] = \"COMPONENT\";\n  ShapeFlags2[ShapeFlags2[\"TEXT_CHILDREN\"] = 8] = \"TEXT_CHILDREN\";\n  ShapeFlags2[ShapeFlags2[\"ARRAY_CHILDREN\"] = 16] = \"ARRAY_CHILDREN\";\n  ShapeFlags2[ShapeFlags2[\"SLOTS_CHILDREN\"] = 32] = \"SLOTS_CHILDREN\";\n  ShapeFlags2[ShapeFlags2[\"TELEPORT\"] = 64] = \"TELEPORT\";\n  ShapeFlags2[ShapeFlags2[\"SUSPENSE\"] = 128] = \"SUSPENSE\";\n  ShapeFlags2[ShapeFlags2[\"COMPONENT_SHOULD_KEEP_ALIVE\"] = 256] = \"COMPONENT_SHOULD_KEEP_ALIVE\";\n  ShapeFlags2[ShapeFlags2[\"COMPONENT_KEPT_ALIVE\"] = 512] = \"COMPONENT_KEPT_ALIVE\";\n})(ShapeFlags || (ShapeFlags = {}));\n\nvar PatchFlags;\n\n(function (PatchFlags2) {\n  PatchFlags2[PatchFlags2[\"TEXT\"] = 1] = \"TEXT\";\n  PatchFlags2[PatchFlags2[\"CLASS\"] = 2] = \"CLASS\";\n  PatchFlags2[PatchFlags2[\"STYLE\"] = 4] = \"STYLE\";\n  PatchFlags2[PatchFlags2[\"PROPS\"] = 8] = \"PROPS\";\n  PatchFlags2[PatchFlags2[\"FULL_PROPS\"] = 16] = \"FULL_PROPS\";\n  PatchFlags2[PatchFlags2[\"HYDRATE_EVENTS\"] = 32] = \"HYDRATE_EVENTS\";\n  PatchFlags2[PatchFlags2[\"STABLE_FRAGMENT\"] = 64] = \"STABLE_FRAGMENT\";\n  PatchFlags2[PatchFlags2[\"KEYED_FRAGMENT\"] = 128] = \"KEYED_FRAGMENT\";\n  PatchFlags2[PatchFlags2[\"UNKEYED_FRAGMENT\"] = 256] = \"UNKEYED_FRAGMENT\";\n  PatchFlags2[PatchFlags2[\"NEED_PATCH\"] = 512] = \"NEED_PATCH\";\n  PatchFlags2[PatchFlags2[\"DYNAMIC_SLOTS\"] = 1024] = \"DYNAMIC_SLOTS\";\n  PatchFlags2[PatchFlags2[\"DEV_ROOT_FRAGMENT\"] = 2048] = \"DEV_ROOT_FRAGMENT\";\n  PatchFlags2[PatchFlags2[\"HOISTED\"] = -1] = \"HOISTED\";\n  PatchFlags2[PatchFlags2[\"BAIL\"] = -2] = \"BAIL\";\n})(PatchFlags || (PatchFlags = {}));\n\nconst isElement = vn => {\n  return Boolean(vn && vn.shapeFlag & 1);\n};\n\nconst isComponent = (vn, type) => {\n  return Boolean(vn && vn.shapeFlag & 6);\n};\n\nconst isTextChildren = (child, children) => {\n  return Boolean(child && child.shapeFlag & 8);\n};\n\nconst isArrayChildren = (vn, children) => {\n  return Boolean(vn && vn.shapeFlag & 16);\n};\n\nconst isSlotsChildren = (vn, children) => {\n  return Boolean(vn && vn.shapeFlag & 32);\n};\n\nconst getFirstComponent = children => {\n  var _a, _b;\n\n  if (!children) {\n    return void 0;\n  }\n\n  for (const child of children) {\n    if (isElement(child) || isComponent(child)) {\n      return child;\n    }\n\n    if (isArrayChildren(child, child.children)) {\n      const result = getFirstComponent(child.children);\n      if (result) return result;\n    } else if (isSlotsChildren(child, child.children)) {\n      const children2 = (_b = (_a = child.children).default) == null ? void 0 : _b.call(_a);\n\n      if (children2) {\n        const result = getFirstComponent(children2);\n        if (result) return result;\n      }\n    } else if (isArray(child)) {\n      const result = getFirstComponent(child);\n      if (result) return result;\n    }\n  }\n\n  return void 0;\n};\n\nconst isEmptyChildren = children => {\n  if (!children) {\n    return true;\n  }\n\n  for (const item of children) {\n    if (item.children) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nconst mergeFirstChild = (children, extraProps) => {\n  if (children && children.length > 0) {\n    for (let i = 0; i < children.length; i++) {\n      const child = children[i];\n\n      if (isElement(child) || isComponent(child)) {\n        const props = isFunction(extraProps) ? extraProps(child) : extraProps;\n        children[i] = cloneVNode(child, props, true);\n        return true;\n      }\n\n      const _children = getChildrenArray(child);\n\n      if (_children && _children.length > 0) {\n        const result = mergeFirstChild(_children, extraProps);\n        if (result) return true;\n      }\n    }\n  }\n\n  return false;\n};\n\nconst getChildrenArray = vn => {\n  if (isArrayChildren(vn, vn.children)) {\n    return vn.children;\n  }\n\n  if (isArray(vn)) {\n    return vn;\n  }\n\n  return void 0;\n};\n\nconst getFirstElementFromVNode = vn => {\n  var _a, _b;\n\n  if (isElement(vn)) {\n    return vn.el;\n  }\n\n  if (isComponent(vn)) {\n    if (((_a = vn.el) == null ? void 0 : _a.nodeType) === 1) {\n      return vn.el;\n    }\n\n    if ((_b = vn.component) == null ? void 0 : _b.subTree) {\n      const ele = getFirstElementFromVNode(vn.component.subTree);\n      if (ele) return ele;\n    }\n  } else {\n    const children = getChildrenArray(vn);\n    return getFirstElementFromChildren(children);\n  }\n\n  return void 0;\n};\n\nconst getFirstElementFromChildren = children => {\n  if (children && children.length > 0) {\n    for (const child of children) {\n      const element = getFirstElementFromVNode(child);\n      if (element) return element;\n    }\n  }\n\n  return void 0;\n};\n\nconst getAllElements = (children, includeText = false) => {\n  var _a, _b;\n\n  const results = [];\n\n  for (const item of children != null ? children : []) {\n    if (isElement(item) || isComponent(item) || includeText && isTextChildren(item, item.children)) {\n      results.push(item);\n    } else if (isArrayChildren(item, item.children)) {\n      results.push(...getAllElements(item.children, includeText));\n    } else if (isSlotsChildren(item, item.children)) {\n      results.push(...getAllElements((_b = (_a = item.children).default) == null ? void 0 : _b.call(_a), includeText));\n    } else if (isArray(item)) {\n      results.push(...getAllElements(item, includeText));\n    }\n  }\n\n  return results;\n};\n\nfunction unFragment(nodeList) {\n  function loop(nodes) {\n    const unFragmentNodeList = [];\n    nodes.forEach(node => {\n      var _a, _b;\n\n      if (isVNode(node) && node.type === Fragment) {\n        if (isSlotsChildren(node, node.children)) {\n          unFragmentNodeList.push(...loop(((_b = (_a = node.children).default) == null ? void 0 : _b.call(_a)) || []));\n        } else if (isArrayChildren(node, node.children)) {\n          unFragmentNodeList.push(...loop(node.children));\n        } else if (isString(node.children)) {\n          unFragmentNodeList.push(node.children);\n        }\n      } else {\n        unFragmentNodeList.push(node);\n      }\n    });\n    return unFragmentNodeList;\n  }\n\n  return loop(nodeList);\n}\n\nconst getSlotFunction = param => {\n  if (param) {\n    if (isFunction(param)) return param;\n    return () => param;\n  }\n\n  return void 0;\n};\n\nconst getComponentsFromVNode = (vn, name) => {\n  var _a;\n\n  const components = [];\n\n  if (isComponent(vn, vn.type)) {\n    if (vn.type.name === name) {\n      if (vn.component) {\n        components.push(vn.component.uid);\n      }\n    } else if ((_a = vn.component) == null ? void 0 : _a.subTree) {\n      components.push(...getComponentsFromVNode(vn.component.subTree, name));\n    }\n  } else {\n    const children = getChildrenArray(vn);\n\n    if (children) {\n      components.push(...getComponentsFromChildren(children, name));\n    }\n  }\n\n  return components;\n};\n\nconst getComponentsFromChildren = (children, name) => {\n  const components = [];\n\n  if (children && children.length > 0) {\n    for (const child of children) {\n      components.push(...getComponentsFromVNode(child, name));\n    }\n  }\n\n  return components;\n};\n\nexport { PatchFlags, ShapeFlags, getAllElements, getChildrenArray, getComponentsFromChildren, getComponentsFromVNode, getFirstComponent, getFirstElementFromChildren, getFirstElementFromVNode, getSlotFunction, isArrayChildren, isComponent, isElement, isEmptyChildren, isSlotsChildren, isTextChildren, mergeFirstChild, unFragment };","map":{"version":3,"names":["cloneVNode","isVNode","Fragment","isArray","isFunction","isString","ShapeFlags","ShapeFlags2","PatchFlags","PatchFlags2","isElement","vn","Boolean","shapeFlag","isComponent","type","isTextChildren","child","children","isArrayChildren","isSlotsChildren","getFirstComponent","_a","_b","result","children2","default","call","isEmptyChildren","item","mergeFirstChild","extraProps","length","i","props","_children","getChildrenArray","getFirstElementFromVNode","el","nodeType","component","subTree","ele","getFirstElementFromChildren","element","getAllElements","includeText","results","push","unFragment","nodeList","loop","nodes","unFragmentNodeList","forEach","node","getSlotFunction","param","getComponentsFromVNode","name","components","uid","getComponentsFromChildren"],"sources":["/www/wwwroot/admin/node_modules/@arco-design/web-vue/es/_utils/vue-utils.js"],"sourcesContent":["import { cloneVNode, isVNode, Fragment } from \"vue\";\nimport { isArray, isFunction, isString } from \"./is.js\";\nvar ShapeFlags;\n(function(ShapeFlags2) {\n  ShapeFlags2[ShapeFlags2[\"ELEMENT\"] = 1] = \"ELEMENT\";\n  ShapeFlags2[ShapeFlags2[\"FUNCTIONAL_COMPONENT\"] = 2] = \"FUNCTIONAL_COMPONENT\";\n  ShapeFlags2[ShapeFlags2[\"STATEFUL_COMPONENT\"] = 4] = \"STATEFUL_COMPONENT\";\n  ShapeFlags2[ShapeFlags2[\"COMPONENT\"] = 6] = \"COMPONENT\";\n  ShapeFlags2[ShapeFlags2[\"TEXT_CHILDREN\"] = 8] = \"TEXT_CHILDREN\";\n  ShapeFlags2[ShapeFlags2[\"ARRAY_CHILDREN\"] = 16] = \"ARRAY_CHILDREN\";\n  ShapeFlags2[ShapeFlags2[\"SLOTS_CHILDREN\"] = 32] = \"SLOTS_CHILDREN\";\n  ShapeFlags2[ShapeFlags2[\"TELEPORT\"] = 64] = \"TELEPORT\";\n  ShapeFlags2[ShapeFlags2[\"SUSPENSE\"] = 128] = \"SUSPENSE\";\n  ShapeFlags2[ShapeFlags2[\"COMPONENT_SHOULD_KEEP_ALIVE\"] = 256] = \"COMPONENT_SHOULD_KEEP_ALIVE\";\n  ShapeFlags2[ShapeFlags2[\"COMPONENT_KEPT_ALIVE\"] = 512] = \"COMPONENT_KEPT_ALIVE\";\n})(ShapeFlags || (ShapeFlags = {}));\nvar PatchFlags;\n(function(PatchFlags2) {\n  PatchFlags2[PatchFlags2[\"TEXT\"] = 1] = \"TEXT\";\n  PatchFlags2[PatchFlags2[\"CLASS\"] = 2] = \"CLASS\";\n  PatchFlags2[PatchFlags2[\"STYLE\"] = 4] = \"STYLE\";\n  PatchFlags2[PatchFlags2[\"PROPS\"] = 8] = \"PROPS\";\n  PatchFlags2[PatchFlags2[\"FULL_PROPS\"] = 16] = \"FULL_PROPS\";\n  PatchFlags2[PatchFlags2[\"HYDRATE_EVENTS\"] = 32] = \"HYDRATE_EVENTS\";\n  PatchFlags2[PatchFlags2[\"STABLE_FRAGMENT\"] = 64] = \"STABLE_FRAGMENT\";\n  PatchFlags2[PatchFlags2[\"KEYED_FRAGMENT\"] = 128] = \"KEYED_FRAGMENT\";\n  PatchFlags2[PatchFlags2[\"UNKEYED_FRAGMENT\"] = 256] = \"UNKEYED_FRAGMENT\";\n  PatchFlags2[PatchFlags2[\"NEED_PATCH\"] = 512] = \"NEED_PATCH\";\n  PatchFlags2[PatchFlags2[\"DYNAMIC_SLOTS\"] = 1024] = \"DYNAMIC_SLOTS\";\n  PatchFlags2[PatchFlags2[\"DEV_ROOT_FRAGMENT\"] = 2048] = \"DEV_ROOT_FRAGMENT\";\n  PatchFlags2[PatchFlags2[\"HOISTED\"] = -1] = \"HOISTED\";\n  PatchFlags2[PatchFlags2[\"BAIL\"] = -2] = \"BAIL\";\n})(PatchFlags || (PatchFlags = {}));\nconst isElement = (vn) => {\n  return Boolean(vn && vn.shapeFlag & 1);\n};\nconst isComponent = (vn, type) => {\n  return Boolean(vn && vn.shapeFlag & 6);\n};\nconst isTextChildren = (child, children) => {\n  return Boolean(child && child.shapeFlag & 8);\n};\nconst isArrayChildren = (vn, children) => {\n  return Boolean(vn && vn.shapeFlag & 16);\n};\nconst isSlotsChildren = (vn, children) => {\n  return Boolean(vn && vn.shapeFlag & 32);\n};\nconst getFirstComponent = (children) => {\n  var _a, _b;\n  if (!children) {\n    return void 0;\n  }\n  for (const child of children) {\n    if (isElement(child) || isComponent(child)) {\n      return child;\n    }\n    if (isArrayChildren(child, child.children)) {\n      const result = getFirstComponent(child.children);\n      if (result)\n        return result;\n    } else if (isSlotsChildren(child, child.children)) {\n      const children2 = (_b = (_a = child.children).default) == null ? void 0 : _b.call(_a);\n      if (children2) {\n        const result = getFirstComponent(children2);\n        if (result)\n          return result;\n      }\n    } else if (isArray(child)) {\n      const result = getFirstComponent(child);\n      if (result)\n        return result;\n    }\n  }\n  return void 0;\n};\nconst isEmptyChildren = (children) => {\n  if (!children) {\n    return true;\n  }\n  for (const item of children) {\n    if (item.children) {\n      return false;\n    }\n  }\n  return true;\n};\nconst mergeFirstChild = (children, extraProps) => {\n  if (children && children.length > 0) {\n    for (let i = 0; i < children.length; i++) {\n      const child = children[i];\n      if (isElement(child) || isComponent(child)) {\n        const props = isFunction(extraProps) ? extraProps(child) : extraProps;\n        children[i] = cloneVNode(child, props, true);\n        return true;\n      }\n      const _children = getChildrenArray(child);\n      if (_children && _children.length > 0) {\n        const result = mergeFirstChild(_children, extraProps);\n        if (result)\n          return true;\n      }\n    }\n  }\n  return false;\n};\nconst getChildrenArray = (vn) => {\n  if (isArrayChildren(vn, vn.children)) {\n    return vn.children;\n  }\n  if (isArray(vn)) {\n    return vn;\n  }\n  return void 0;\n};\nconst getFirstElementFromVNode = (vn) => {\n  var _a, _b;\n  if (isElement(vn)) {\n    return vn.el;\n  }\n  if (isComponent(vn)) {\n    if (((_a = vn.el) == null ? void 0 : _a.nodeType) === 1) {\n      return vn.el;\n    }\n    if ((_b = vn.component) == null ? void 0 : _b.subTree) {\n      const ele = getFirstElementFromVNode(vn.component.subTree);\n      if (ele)\n        return ele;\n    }\n  } else {\n    const children = getChildrenArray(vn);\n    return getFirstElementFromChildren(children);\n  }\n  return void 0;\n};\nconst getFirstElementFromChildren = (children) => {\n  if (children && children.length > 0) {\n    for (const child of children) {\n      const element = getFirstElementFromVNode(child);\n      if (element)\n        return element;\n    }\n  }\n  return void 0;\n};\nconst getAllElements = (children, includeText = false) => {\n  var _a, _b;\n  const results = [];\n  for (const item of children != null ? children : []) {\n    if (isElement(item) || isComponent(item) || includeText && isTextChildren(item, item.children)) {\n      results.push(item);\n    } else if (isArrayChildren(item, item.children)) {\n      results.push(...getAllElements(item.children, includeText));\n    } else if (isSlotsChildren(item, item.children)) {\n      results.push(...getAllElements((_b = (_a = item.children).default) == null ? void 0 : _b.call(_a), includeText));\n    } else if (isArray(item)) {\n      results.push(...getAllElements(item, includeText));\n    }\n  }\n  return results;\n};\nfunction unFragment(nodeList) {\n  function loop(nodes) {\n    const unFragmentNodeList = [];\n    nodes.forEach((node) => {\n      var _a, _b;\n      if (isVNode(node) && node.type === Fragment) {\n        if (isSlotsChildren(node, node.children)) {\n          unFragmentNodeList.push(...loop(((_b = (_a = node.children).default) == null ? void 0 : _b.call(_a)) || []));\n        } else if (isArrayChildren(node, node.children)) {\n          unFragmentNodeList.push(...loop(node.children));\n        } else if (isString(node.children)) {\n          unFragmentNodeList.push(node.children);\n        }\n      } else {\n        unFragmentNodeList.push(node);\n      }\n    });\n    return unFragmentNodeList;\n  }\n  return loop(nodeList);\n}\nconst getSlotFunction = (param) => {\n  if (param) {\n    if (isFunction(param))\n      return param;\n    return () => param;\n  }\n  return void 0;\n};\nconst getComponentsFromVNode = (vn, name) => {\n  var _a;\n  const components = [];\n  if (isComponent(vn, vn.type)) {\n    if (vn.type.name === name) {\n      if (vn.component) {\n        components.push(vn.component.uid);\n      }\n    } else if ((_a = vn.component) == null ? void 0 : _a.subTree) {\n      components.push(...getComponentsFromVNode(vn.component.subTree, name));\n    }\n  } else {\n    const children = getChildrenArray(vn);\n    if (children) {\n      components.push(...getComponentsFromChildren(children, name));\n    }\n  }\n  return components;\n};\nconst getComponentsFromChildren = (children, name) => {\n  const components = [];\n  if (children && children.length > 0) {\n    for (const child of children) {\n      components.push(...getComponentsFromVNode(child, name));\n    }\n  }\n  return components;\n};\nexport { PatchFlags, ShapeFlags, getAllElements, getChildrenArray, getComponentsFromChildren, getComponentsFromVNode, getFirstComponent, getFirstElementFromChildren, getFirstElementFromVNode, getSlotFunction, isArrayChildren, isComponent, isElement, isEmptyChildren, isSlotsChildren, isTextChildren, mergeFirstChild, unFragment };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}