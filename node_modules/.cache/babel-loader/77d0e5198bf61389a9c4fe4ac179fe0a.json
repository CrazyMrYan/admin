{"ast":null,"code":"import { isBoolean } from \"../../_utils/is.js\";\n\nfunction getFlattenTreeData(tree) {\n  const flattenTreeData = [];\n\n  function preOrder(tree2) {\n    if (!tree2) return;\n    tree2.forEach(node => {\n      flattenTreeData.push(node);\n      preOrder(node.children);\n    });\n  }\n\n  preOrder(tree);\n  return flattenTreeData;\n}\n\nfunction getKey2TreeNode(flattenTreeData) {\n  const key2TreeNode = new Map();\n  flattenTreeData.forEach(node => {\n    key2TreeNode.set(node.key, node);\n  });\n  return key2TreeNode;\n}\n\nfunction isNodeSelectable(node) {\n  return node.selectable && !node.disabled;\n}\n\nfunction isNodeExpandable(node) {\n  return !node.isLeaf && node.children;\n}\n\nfunction isLeafNode(node) {\n  if (isBoolean(node.isLeaf)) return node.isLeaf;\n  return !node.children;\n}\n\nexport { getFlattenTreeData, getKey2TreeNode, isLeafNode, isNodeExpandable, isNodeSelectable };","map":{"version":3,"names":["isBoolean","getFlattenTreeData","tree","flattenTreeData","preOrder","tree2","forEach","node","push","children","getKey2TreeNode","key2TreeNode","Map","set","key","isNodeSelectable","selectable","disabled","isNodeExpandable","isLeaf","isLeafNode"],"sources":["/www/wwwroot/admin/node_modules/@arco-design/web-vue/es/tree/utils/index.js"],"sourcesContent":["import { isBoolean } from \"../../_utils/is.js\";\nfunction getFlattenTreeData(tree) {\n  const flattenTreeData = [];\n  function preOrder(tree2) {\n    if (!tree2)\n      return;\n    tree2.forEach((node) => {\n      flattenTreeData.push(node);\n      preOrder(node.children);\n    });\n  }\n  preOrder(tree);\n  return flattenTreeData;\n}\nfunction getKey2TreeNode(flattenTreeData) {\n  const key2TreeNode = new Map();\n  flattenTreeData.forEach((node) => {\n    key2TreeNode.set(node.key, node);\n  });\n  return key2TreeNode;\n}\nfunction isNodeSelectable(node) {\n  return node.selectable && !node.disabled;\n}\nfunction isNodeExpandable(node) {\n  return !node.isLeaf && node.children;\n}\nfunction isLeafNode(node) {\n  if (isBoolean(node.isLeaf))\n    return node.isLeaf;\n  return !node.children;\n}\nexport { getFlattenTreeData, getKey2TreeNode, isLeafNode, isNodeExpandable, isNodeSelectable };\n"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;;AACA,SAASC,kBAAT,CAA4BC,IAA5B,EAAkC;EAChC,MAAMC,eAAe,GAAG,EAAxB;;EACA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;IACvB,IAAI,CAACA,KAAL,EACE;IACFA,KAAK,CAACC,OAAN,CAAeC,IAAD,IAAU;MACtBJ,eAAe,CAACK,IAAhB,CAAqBD,IAArB;MACAH,QAAQ,CAACG,IAAI,CAACE,QAAN,CAAR;IACD,CAHD;EAID;;EACDL,QAAQ,CAACF,IAAD,CAAR;EACA,OAAOC,eAAP;AACD;;AACD,SAASO,eAAT,CAAyBP,eAAzB,EAA0C;EACxC,MAAMQ,YAAY,GAAG,IAAIC,GAAJ,EAArB;EACAT,eAAe,CAACG,OAAhB,CAAyBC,IAAD,IAAU;IAChCI,YAAY,CAACE,GAAb,CAAiBN,IAAI,CAACO,GAAtB,EAA2BP,IAA3B;EACD,CAFD;EAGA,OAAOI,YAAP;AACD;;AACD,SAASI,gBAAT,CAA0BR,IAA1B,EAAgC;EAC9B,OAAOA,IAAI,CAACS,UAAL,IAAmB,CAACT,IAAI,CAACU,QAAhC;AACD;;AACD,SAASC,gBAAT,CAA0BX,IAA1B,EAAgC;EAC9B,OAAO,CAACA,IAAI,CAACY,MAAN,IAAgBZ,IAAI,CAACE,QAA5B;AACD;;AACD,SAASW,UAAT,CAAoBb,IAApB,EAA0B;EACxB,IAAIP,SAAS,CAACO,IAAI,CAACY,MAAN,CAAb,EACE,OAAOZ,IAAI,CAACY,MAAZ;EACF,OAAO,CAACZ,IAAI,CAACE,QAAb;AACD;;AACD,SAASR,kBAAT,EAA6BS,eAA7B,EAA8CU,UAA9C,EAA0DF,gBAA1D,EAA4EH,gBAA5E"},"metadata":{},"sourceType":"module"}