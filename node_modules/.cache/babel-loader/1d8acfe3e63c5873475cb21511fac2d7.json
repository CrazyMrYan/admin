{"ast":null,"code":"/**\r\n * @desc 解决浮动运算问题，避免小数点后产生多位数和计算精度损失。\r\n * 问题示例：2.3 + 2.4 = 4.699999999999999，1.0 - 0.9 = 0.09999999999999998\r\n */\n\n/**\r\n * 把错误的数据转正\r\n * strip(0.09999999999999998)=0.1\r\n */\nfunction strip(num, precision) {\n  if (precision === void 0) {\n    precision = 15;\n  }\n\n  return +parseFloat(Number(num).toPrecision(precision));\n}\n/**\r\n * Return digits length of a number\r\n * @param {*number} num Input number\r\n */\n\n\nfunction digitLength(num) {\n  // Get digit length of e\n  var eSplit = num.toString().split(/[eE]/);\n  var len = (eSplit[0].split('.')[1] || '').length - +(eSplit[1] || 0);\n  return len > 0 ? len : 0;\n}\n/**\r\n * 把小数转成整数，支持科学计数法。如果是小数则放大成整数\r\n * @param {*number} num 输入数\r\n */\n\n\nfunction float2Fixed(num) {\n  if (num.toString().indexOf('e') === -1) {\n    return Number(num.toString().replace('.', ''));\n  }\n\n  var dLen = digitLength(num);\n  return dLen > 0 ? strip(Number(num) * Math.pow(10, dLen)) : Number(num);\n}\n/**\r\n * 检测数字是否越界，如果越界给出提示\r\n * @param {*number} num 输入数\r\n */\n\n\nfunction checkBoundary(num) {\n  if (_boundaryCheckingState) {\n    if (num > Number.MAX_SAFE_INTEGER || num < Number.MIN_SAFE_INTEGER) {\n      console.warn(num + \" is beyond boundary when transfer to integer, the results may not be accurate\");\n    }\n  }\n}\n/**\r\n * 迭代操作\r\n */\n\n\nfunction iteratorOperation(arr, operation) {\n  var num1 = arr[0],\n      num2 = arr[1],\n      others = arr.slice(2);\n  var res = operation(num1, num2);\n  others.forEach(function (num) {\n    res = operation(res, num);\n  });\n  return res;\n}\n/**\r\n * 精确乘法\r\n */\n\n\nfunction times() {\n  var nums = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    nums[_i] = arguments[_i];\n  }\n\n  if (nums.length > 2) {\n    return iteratorOperation(nums, times);\n  }\n\n  var num1 = nums[0],\n      num2 = nums[1];\n  var num1Changed = float2Fixed(num1);\n  var num2Changed = float2Fixed(num2);\n  var baseNum = digitLength(num1) + digitLength(num2);\n  var leftValue = num1Changed * num2Changed;\n  checkBoundary(leftValue);\n  return leftValue / Math.pow(10, baseNum);\n}\n/**\r\n * 精确加法\r\n */\n\n\nfunction plus() {\n  var nums = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    nums[_i] = arguments[_i];\n  }\n\n  if (nums.length > 2) {\n    return iteratorOperation(nums, plus);\n  }\n\n  var num1 = nums[0],\n      num2 = nums[1]; // 取最大的小数位\n\n  var baseNum = Math.pow(10, Math.max(digitLength(num1), digitLength(num2))); // 把小数都转为整数然后再计算\n\n  return (times(num1, baseNum) + times(num2, baseNum)) / baseNum;\n}\n/**\r\n * 精确减法\r\n */\n\n\nfunction minus() {\n  var nums = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    nums[_i] = arguments[_i];\n  }\n\n  if (nums.length > 2) {\n    return iteratorOperation(nums, minus);\n  }\n\n  var num1 = nums[0],\n      num2 = nums[1];\n  var baseNum = Math.pow(10, Math.max(digitLength(num1), digitLength(num2)));\n  return (times(num1, baseNum) - times(num2, baseNum)) / baseNum;\n}\n/**\r\n * 精确除法\r\n */\n\n\nfunction divide() {\n  var nums = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    nums[_i] = arguments[_i];\n  }\n\n  if (nums.length > 2) {\n    return iteratorOperation(nums, divide);\n  }\n\n  var num1 = nums[0],\n      num2 = nums[1];\n  var num1Changed = float2Fixed(num1);\n  var num2Changed = float2Fixed(num2);\n  checkBoundary(num1Changed);\n  checkBoundary(num2Changed); // fix: 类似 10 ** -4 为 0.00009999999999999999，strip 修正\n\n  return times(num1Changed / num2Changed, strip(Math.pow(10, digitLength(num2) - digitLength(num1))));\n}\n/**\r\n * 四舍五入\r\n */\n\n\nfunction round(num, ratio) {\n  var base = Math.pow(10, ratio);\n  var result = divide(Math.round(Math.abs(times(num, base))), base);\n\n  if (num < 0 && result !== 0) {\n    result = times(result, -1);\n  }\n\n  return result;\n}\n\nvar _boundaryCheckingState = true;\n/**\r\n * 是否进行边界检查，默认开启\r\n * @param flag 标记开关，true 为开启，false 为关闭，默认为 true\r\n */\n\nfunction enableBoundaryChecking(flag) {\n  if (flag === void 0) {\n    flag = true;\n  }\n\n  _boundaryCheckingState = flag;\n}\n\nvar index = {\n  strip: strip,\n  plus: plus,\n  minus: minus,\n  times: times,\n  divide: divide,\n  round: round,\n  digitLength: digitLength,\n  float2Fixed: float2Fixed,\n  enableBoundaryChecking: enableBoundaryChecking\n};\nexport { strip, plus, minus, times, divide, round, digitLength, float2Fixed, enableBoundaryChecking };\nexport default index;","map":{"version":3,"names":["strip","num","precision","parseFloat","Number","toPrecision","digitLength","eSplit","toString","split","len","length","float2Fixed","indexOf","replace","dLen","Math","pow","checkBoundary","_boundaryCheckingState","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","console","warn","iteratorOperation","arr","operation","num1","num2","others","slice","res","forEach","times","nums","_i","arguments","num1Changed","num2Changed","baseNum","leftValue","plus","max","minus","divide","round","ratio","base","result","abs","enableBoundaryChecking","flag","index"],"sources":["/www/wwwroot/admin/node_modules/number-precision/build/index.es.js"],"sourcesContent":["/**\r\n * @desc 解决浮动运算问题，避免小数点后产生多位数和计算精度损失。\r\n * 问题示例：2.3 + 2.4 = 4.699999999999999，1.0 - 0.9 = 0.09999999999999998\r\n */\r\n/**\r\n * 把错误的数据转正\r\n * strip(0.09999999999999998)=0.1\r\n */\r\nfunction strip(num, precision) {\r\n    if (precision === void 0) { precision = 15; }\r\n    return +parseFloat(Number(num).toPrecision(precision));\r\n}\r\n/**\r\n * Return digits length of a number\r\n * @param {*number} num Input number\r\n */\r\nfunction digitLength(num) {\r\n    // Get digit length of e\r\n    var eSplit = num.toString().split(/[eE]/);\r\n    var len = (eSplit[0].split('.')[1] || '').length - +(eSplit[1] || 0);\r\n    return len > 0 ? len : 0;\r\n}\r\n/**\r\n * 把小数转成整数，支持科学计数法。如果是小数则放大成整数\r\n * @param {*number} num 输入数\r\n */\r\nfunction float2Fixed(num) {\r\n    if (num.toString().indexOf('e') === -1) {\r\n        return Number(num.toString().replace('.', ''));\r\n    }\r\n    var dLen = digitLength(num);\r\n    return dLen > 0 ? strip(Number(num) * Math.pow(10, dLen)) : Number(num);\r\n}\r\n/**\r\n * 检测数字是否越界，如果越界给出提示\r\n * @param {*number} num 输入数\r\n */\r\nfunction checkBoundary(num) {\r\n    if (_boundaryCheckingState) {\r\n        if (num > Number.MAX_SAFE_INTEGER || num < Number.MIN_SAFE_INTEGER) {\r\n            console.warn(num + \" is beyond boundary when transfer to integer, the results may not be accurate\");\r\n        }\r\n    }\r\n}\r\n/**\r\n * 迭代操作\r\n */\r\nfunction iteratorOperation(arr, operation) {\r\n    var num1 = arr[0], num2 = arr[1], others = arr.slice(2);\r\n    var res = operation(num1, num2);\r\n    others.forEach(function (num) {\r\n        res = operation(res, num);\r\n    });\r\n    return res;\r\n}\r\n/**\r\n * 精确乘法\r\n */\r\nfunction times() {\r\n    var nums = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        nums[_i] = arguments[_i];\r\n    }\r\n    if (nums.length > 2) {\r\n        return iteratorOperation(nums, times);\r\n    }\r\n    var num1 = nums[0], num2 = nums[1];\r\n    var num1Changed = float2Fixed(num1);\r\n    var num2Changed = float2Fixed(num2);\r\n    var baseNum = digitLength(num1) + digitLength(num2);\r\n    var leftValue = num1Changed * num2Changed;\r\n    checkBoundary(leftValue);\r\n    return leftValue / Math.pow(10, baseNum);\r\n}\r\n/**\r\n * 精确加法\r\n */\r\nfunction plus() {\r\n    var nums = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        nums[_i] = arguments[_i];\r\n    }\r\n    if (nums.length > 2) {\r\n        return iteratorOperation(nums, plus);\r\n    }\r\n    var num1 = nums[0], num2 = nums[1];\r\n    // 取最大的小数位\r\n    var baseNum = Math.pow(10, Math.max(digitLength(num1), digitLength(num2)));\r\n    // 把小数都转为整数然后再计算\r\n    return (times(num1, baseNum) + times(num2, baseNum)) / baseNum;\r\n}\r\n/**\r\n * 精确减法\r\n */\r\nfunction minus() {\r\n    var nums = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        nums[_i] = arguments[_i];\r\n    }\r\n    if (nums.length > 2) {\r\n        return iteratorOperation(nums, minus);\r\n    }\r\n    var num1 = nums[0], num2 = nums[1];\r\n    var baseNum = Math.pow(10, Math.max(digitLength(num1), digitLength(num2)));\r\n    return (times(num1, baseNum) - times(num2, baseNum)) / baseNum;\r\n}\r\n/**\r\n * 精确除法\r\n */\r\nfunction divide() {\r\n    var nums = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        nums[_i] = arguments[_i];\r\n    }\r\n    if (nums.length > 2) {\r\n        return iteratorOperation(nums, divide);\r\n    }\r\n    var num1 = nums[0], num2 = nums[1];\r\n    var num1Changed = float2Fixed(num1);\r\n    var num2Changed = float2Fixed(num2);\r\n    checkBoundary(num1Changed);\r\n    checkBoundary(num2Changed);\r\n    // fix: 类似 10 ** -4 为 0.00009999999999999999，strip 修正\r\n    return times(num1Changed / num2Changed, strip(Math.pow(10, digitLength(num2) - digitLength(num1))));\r\n}\r\n/**\r\n * 四舍五入\r\n */\r\nfunction round(num, ratio) {\r\n    var base = Math.pow(10, ratio);\r\n    var result = divide(Math.round(Math.abs(times(num, base))), base);\r\n    if (num < 0 && result !== 0) {\r\n        result = times(result, -1);\r\n    }\r\n    return result;\r\n}\r\nvar _boundaryCheckingState = true;\r\n/**\r\n * 是否进行边界检查，默认开启\r\n * @param flag 标记开关，true 为开启，false 为关闭，默认为 true\r\n */\r\nfunction enableBoundaryChecking(flag) {\r\n    if (flag === void 0) { flag = true; }\r\n    _boundaryCheckingState = flag;\r\n}\r\nvar index = {\r\n    strip: strip,\r\n    plus: plus,\r\n    minus: minus,\r\n    times: times,\r\n    divide: divide,\r\n    round: round,\r\n    digitLength: digitLength,\r\n    float2Fixed: float2Fixed,\r\n    enableBoundaryChecking: enableBoundaryChecking,\r\n};\n\nexport { strip, plus, minus, times, divide, round, digitLength, float2Fixed, enableBoundaryChecking };\nexport default index;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}