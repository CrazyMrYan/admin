{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport { toRefs, computed } from \"vue\";\nimport { isFunction } from \"../../_utils/is.js\";\n\nfunction getDefaultFormat(mode = \"date\", showTime = false) {\n  switch (mode) {\n    case \"date\":\n      return showTime ? \"YYYY-MM-DD HH:mm:ss\" : \"YYYY-MM-DD\";\n\n    case \"month\":\n      return \"YYYY-MM\";\n\n    case \"year\":\n      return \"YYYY\";\n\n    case \"week\":\n      return \"gggg-wo\";\n\n    case \"quarter\":\n      return \"YYYY-[Q]Q\";\n\n    default:\n      return \"YYYY-MM-DD\";\n  }\n}\n\nfunction useFormat(props) {\n  const {\n    format: propFormat,\n    mode,\n    showTime,\n    valueFormat: propValueFormat\n  } = toRefs(props);\n  const format = computed(() => !isFunction(propFormat == null ? void 0 : propFormat.value) && (propFormat == null ? void 0 : propFormat.value) || getDefaultFormat(mode == null ? void 0 : mode.value, showTime == null ? void 0 : showTime.value));\n  const valueFormat = computed(() => (propValueFormat == null ? void 0 : propValueFormat.value) || format.value);\n  const parseValueFormat = computed(() => [\"timestamp\", \"Date\"].includes(valueFormat.value) ? format.value : valueFormat.value);\n  return {\n    format,\n    valueFormat,\n    parseValueFormat\n  };\n}\n\nexport { useFormat as default, getDefaultFormat };","map":{"version":3,"names":["toRefs","computed","isFunction","getDefaultFormat","mode","showTime","useFormat","props","format","propFormat","valueFormat","propValueFormat","value","parseValueFormat","includes","default"],"sources":["/www/wwwroot/admin/node_modules/@arco-design/web-vue/es/date-picker/hooks/use-format.js"],"sourcesContent":["import { toRefs, computed } from \"vue\";\nimport { isFunction } from \"../../_utils/is.js\";\nfunction getDefaultFormat(mode = \"date\", showTime = false) {\n  switch (mode) {\n    case \"date\":\n      return showTime ? \"YYYY-MM-DD HH:mm:ss\" : \"YYYY-MM-DD\";\n    case \"month\":\n      return \"YYYY-MM\";\n    case \"year\":\n      return \"YYYY\";\n    case \"week\":\n      return \"gggg-wo\";\n    case \"quarter\":\n      return \"YYYY-[Q]Q\";\n    default:\n      return \"YYYY-MM-DD\";\n  }\n}\nfunction useFormat(props) {\n  const {\n    format: propFormat,\n    mode,\n    showTime,\n    valueFormat: propValueFormat\n  } = toRefs(props);\n  const format = computed(() => !isFunction(propFormat == null ? void 0 : propFormat.value) && (propFormat == null ? void 0 : propFormat.value) || getDefaultFormat(mode == null ? void 0 : mode.value, showTime == null ? void 0 : showTime.value));\n  const valueFormat = computed(() => (propValueFormat == null ? void 0 : propValueFormat.value) || format.value);\n  const parseValueFormat = computed(() => [\"timestamp\", \"Date\"].includes(valueFormat.value) ? format.value : valueFormat.value);\n  return {\n    format,\n    valueFormat,\n    parseValueFormat\n  };\n}\nexport { useFormat as default, getDefaultFormat };\n"],"mappings":";AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,KAAjC;AACA,SAASC,UAAT,QAA2B,oBAA3B;;AACA,SAASC,gBAAT,CAA0BC,IAAI,GAAG,MAAjC,EAAyCC,QAAQ,GAAG,KAApD,EAA2D;EACzD,QAAQD,IAAR;IACE,KAAK,MAAL;MACE,OAAOC,QAAQ,GAAG,qBAAH,GAA2B,YAA1C;;IACF,KAAK,OAAL;MACE,OAAO,SAAP;;IACF,KAAK,MAAL;MACE,OAAO,MAAP;;IACF,KAAK,MAAL;MACE,OAAO,SAAP;;IACF,KAAK,SAAL;MACE,OAAO,WAAP;;IACF;MACE,OAAO,YAAP;EAZJ;AAcD;;AACD,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;EACxB,MAAM;IACJC,MAAM,EAAEC,UADJ;IAEJL,IAFI;IAGJC,QAHI;IAIJK,WAAW,EAAEC;EAJT,IAKFX,MAAM,CAACO,KAAD,CALV;EAMA,MAAMC,MAAM,GAAGP,QAAQ,CAAC,MAAM,CAACC,UAAU,CAACO,UAAU,IAAI,IAAd,GAAqB,KAAK,CAA1B,GAA8BA,UAAU,CAACG,KAA1C,CAAX,KAAgEH,UAAU,IAAI,IAAd,GAAqB,KAAK,CAA1B,GAA8BA,UAAU,CAACG,KAAzG,KAAmHT,gBAAgB,CAACC,IAAI,IAAI,IAAR,GAAe,KAAK,CAApB,GAAwBA,IAAI,CAACQ,KAA9B,EAAqCP,QAAQ,IAAI,IAAZ,GAAmB,KAAK,CAAxB,GAA4BA,QAAQ,CAACO,KAA1E,CAA1I,CAAvB;EACA,MAAMF,WAAW,GAAGT,QAAQ,CAAC,MAAM,CAACU,eAAe,IAAI,IAAnB,GAA0B,KAAK,CAA/B,GAAmCA,eAAe,CAACC,KAApD,KAA8DJ,MAAM,CAACI,KAA5E,CAA5B;EACA,MAAMC,gBAAgB,GAAGZ,QAAQ,CAAC,MAAM,CAAC,WAAD,EAAc,MAAd,EAAsBa,QAAtB,CAA+BJ,WAAW,CAACE,KAA3C,IAAoDJ,MAAM,CAACI,KAA3D,GAAmEF,WAAW,CAACE,KAAtF,CAAjC;EACA,OAAO;IACLJ,MADK;IAELE,WAFK;IAGLG;EAHK,CAAP;AAKD;;AACD,SAASP,SAAS,IAAIS,OAAtB,EAA+BZ,gBAA/B"},"metadata":{},"sourceType":"module"}