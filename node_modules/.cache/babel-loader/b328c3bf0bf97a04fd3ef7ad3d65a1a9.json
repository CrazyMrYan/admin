{"ast":null,"code":"var __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\n\nimport { defineComponent, toRefs, computed, ref, reactive, onUnmounted, watch, onMounted, onUpdated, createVNode, isVNode, mergeProps } from \"vue\";\nimport { getPrefixCls } from \"../_utils/global-config.js\";\nimport { isObject } from \"../_utils/is.js\";\nimport EditContent from \"./edit-content.js\";\nimport Operations from \"./operations.js\";\nimport ResizeObserver from \"../_components/resize-observer.js\";\nimport { omit } from \"../_utils/omit.js\";\nimport useMergeState from \"../_hooks/use-merge-state.js\";\nimport measure from \"./utils/measure.js\";\nimport { clipboard } from \"../_utils/clipboard.js\";\nimport getInnerText from \"./utils/getInnerText.js\";\nimport { caf, raf } from \"../_utils/raf.js\";\nimport Tooltip from \"../tooltip/index.js\";\nimport Popover from \"../popover/index.js\";\n\nfunction _isSlot(s) {\n  return typeof s === \"function\" || Object.prototype.toString.call(s) === \"[object Object]\" && !isVNode(s);\n}\n\nfunction getComponentTags(props) {\n  const {\n    bold,\n    mark,\n    underline,\n    delete: propDelete,\n    code\n  } = props;\n  const componentTags = [];\n\n  if (bold) {\n    componentTags.push(\"b\");\n  }\n\n  if (underline) {\n    componentTags.push(\"u\");\n  }\n\n  if (propDelete) {\n    componentTags.push(\"del\");\n  }\n\n  if (code) {\n    componentTags.push(\"code\");\n  }\n\n  if (mark) {\n    componentTags.push(\"mark\");\n  }\n\n  return componentTags;\n}\n\nfunction Wrap(props, children) {\n  const {\n    mark\n  } = props;\n  const componentTags = getComponentTags(props);\n  const markStyle = isObject(mark) && mark.color ? {\n    backgroundColor: mark.color\n  } : {};\n  return componentTags.reduce((content, Tag) => {\n    const attrs = Tag === \"mark\" ? {\n      style: markStyle\n    } : {};\n    return createVNode(Tag, attrs, _isSlot(content) ? content : {\n      default: () => [content]\n    });\n  }, children);\n}\n\nfunction normalizeEllipsisConfig(config) {\n  const showTooltip = !!config.showTooltip;\n  const TooltipComponent = isObject(config.showTooltip) && config.showTooltip.type === \"popover\" ? Popover : Tooltip;\n  const tooltipProps = isObject(config.showTooltip) && config.showTooltip.props || {};\n  return __spreadProps(__spreadValues({\n    rows: 1,\n    suffix: \"\",\n    ellipsisStr: \"...\",\n    expandable: false\n  }, omit(config, [\"showTooltip\"])), {\n    showTooltip,\n    TooltipComponent,\n    tooltipProps\n  });\n}\n\nvar Base = defineComponent({\n  name: \"TypographyBase\",\n  inheritAttrs: false,\n  props: {\n    component: {\n      type: String,\n      required: true\n    },\n    type: {\n      type: String\n    },\n    bold: {\n      type: Boolean\n    },\n    mark: {\n      type: [Boolean, Object],\n      default: false\n    },\n    underline: {\n      type: Boolean\n    },\n    delete: {\n      type: Boolean\n    },\n    code: {\n      type: Boolean\n    },\n    disabled: {\n      type: Boolean\n    },\n    editable: {\n      type: Boolean\n    },\n    editing: {\n      type: Boolean,\n      default: void 0\n    },\n    defaultEditing: {\n      type: Boolean\n    },\n    editText: {\n      type: String\n    },\n    copyable: {\n      type: Boolean\n    },\n    copyText: {\n      type: String\n    },\n    copyDelay: {\n      type: Number,\n      default: 3e3\n    },\n    ellipsis: {\n      type: [Boolean, Object],\n      default: false\n    },\n    editTooltipProps: {\n      type: Object\n    },\n    copyTooltipProps: {\n      type: Object\n    }\n  },\n  emits: {\n    \"editStart\": () => true,\n    \"change\": text => true,\n    \"update:editText\": text => true,\n    \"editEnd\": () => true,\n    \"update:editing\": editing => true,\n    \"copy\": text => true,\n    \"ellipsis\": isEllipsis => true,\n    \"expand\": expanded => true\n  },\n\n  setup(props, {\n    slots,\n    emit,\n    attrs\n  }) {\n    const {\n      editing: propEditing,\n      defaultEditing,\n      ellipsis,\n      copyable,\n      editable,\n      copyText,\n      editText,\n      copyDelay,\n      component\n    } = toRefs(props);\n    const prefixCls = getPrefixCls(\"typography\");\n    const classNames = computed(() => [prefixCls, {\n      [`${prefixCls}-${props.type}`]: props.type,\n      [`${prefixCls}-disabled`]: props.disabled\n    }]);\n    const wrapperRef = ref();\n    const fullText = ref(\"\");\n    const [editing, setEditing] = useMergeState(defaultEditing.value, reactive({\n      value: propEditing\n    }));\n    const mergeEditing = computed(() => editable.value && editing.value);\n\n    function onEditStart() {\n      emit(\"update:editing\", true);\n      emit(\"editStart\");\n      setEditing(true);\n    }\n\n    function onEditChange(text) {\n      emit(\"update:editText\", text);\n      emit(\"change\", text);\n    }\n\n    function onEditEnd() {\n      if (!editing.value) return;\n      emit(\"update:editing\", false);\n      emit(\"editEnd\");\n      setEditing(false);\n    }\n\n    const isCopied = ref(false);\n    let copyTimer = null;\n\n    function onCopyClick() {\n      var _a;\n\n      const text = (_a = copyText.value) != null ? _a : fullText.value;\n      clipboard(text || \"\");\n      isCopied.value = true;\n      emit(\"copy\", text);\n      copyTimer = setTimeout(() => {\n        isCopied.value = false;\n      }, copyDelay.value);\n    }\n\n    onUnmounted(() => {\n      copyTimer && clearTimeout(copyTimer);\n      copyTimer = null;\n    });\n    const isEllipsis = ref(false);\n    const expanded = ref(false);\n    const ellipsisText = ref(\"\");\n    const ellipsisConfig = computed(() => normalizeEllipsisConfig(isObject(ellipsis.value) && ellipsis.value || {}));\n    let rafId = null;\n\n    function onExpandClick() {\n      const newVal = !expanded.value;\n      expanded.value = newVal;\n      emit(\"expand\", newVal);\n    }\n\n    function renderOperations(forceRenderExpand = false) {\n      return createVNode(Operations, {\n        \"editable\": editable.value,\n        \"copyable\": copyable.value,\n        \"expandable\": ellipsisConfig.value.expandable,\n        \"isCopied\": isCopied.value,\n        \"isEllipsis\": isEllipsis.value,\n        \"expanded\": expanded.value,\n        \"forceRenderExpand\": forceRenderExpand,\n        \"editTooltipProps\": props.editTooltipProps,\n        \"copyTooltipProps\": props.copyTooltipProps,\n        \"onEdit\": onEditStart,\n        \"onCopy\": onCopyClick,\n        \"onExpand\": onExpandClick\n      }, {\n        \"copy-tooltip\": slots[\"copy-tooltip\"],\n        \"copy-icon\": slots[\"copy-icon\"],\n        \"expand-node\": slots[\"expand-node\"]\n      });\n    }\n\n    function calEllipsis() {\n      if (!wrapperRef.value) return;\n      const {\n        ellipsis: ellipsis2,\n        text\n      } = measure(wrapperRef.value, ellipsisConfig.value, renderOperations(!!ellipsisConfig.value.expandable), fullText.value);\n\n      if (isEllipsis.value !== ellipsis2) {\n        isEllipsis.value = ellipsis2;\n        emit(\"ellipsis\", ellipsis2);\n      }\n\n      if (ellipsisText.value !== text) {\n        ellipsisText.value = text || \"\";\n      }\n    }\n\n    function resizeOnNextFrame() {\n      const needCalEllipsis = ellipsis.value && !expanded.value;\n      if (!needCalEllipsis) return;\n      caf(rafId);\n      rafId = raf(() => {\n        calEllipsis();\n      });\n    }\n\n    onUnmounted(() => {\n      caf(rafId);\n    });\n    watch(() => ellipsisConfig.value.rows, () => {\n      resizeOnNextFrame();\n    });\n    watch(ellipsis, newVal => {\n      if (newVal) {\n        resizeOnNextFrame();\n      } else {\n        isEllipsis.value = false;\n      }\n    });\n    let children = [];\n\n    const updateFullText = () => {\n      if (ellipsis.value || copyable.value || editable.value) {\n        const _fullText = getInnerText(children);\n\n        if (_fullText !== fullText.value) {\n          fullText.value = _fullText;\n          resizeOnNextFrame();\n        }\n      }\n    };\n\n    onMounted(updateFullText);\n    onUpdated(updateFullText);\n    return () => {\n      var _a, _b;\n\n      children = ((_a = slots.default) == null ? void 0 : _a.call(slots)) || [];\n\n      if (mergeEditing.value) {\n        const _editText = (_b = editText.value) != null ? _b : fullText.value;\n\n        return createVNode(EditContent, {\n          \"text\": _editText,\n          \"onChange\": text => {\n            if (text !== _editText) {\n              onEditChange(text);\n            }\n          },\n          \"onEnd\": onEditEnd\n        }, null);\n      }\n\n      const {\n        suffix,\n        ellipsisStr,\n        showTooltip,\n        tooltipProps,\n        TooltipComponent\n      } = ellipsisConfig.value;\n      const showEllipsis = isEllipsis.value && !expanded.value;\n      const Content = Wrap(props, showEllipsis ? ellipsisText.value : children);\n      const titleAttrs = showEllipsis && !showTooltip ? {\n        title: fullText.value\n      } : {};\n      const Component = component.value;\n      return createVNode(ResizeObserver, {\n        \"onResize\": () => resizeOnNextFrame()\n      }, {\n        default: () => [createVNode(Component, mergeProps({\n          \"class\": classNames.value,\n          \"ref\": wrapperRef\n        }, titleAttrs, attrs), {\n          default: () => [showEllipsis && showTooltip ? createVNode(TooltipComponent, tooltipProps, {\n            default: () => [createVNode(\"span\", null, [Content])],\n            content: () => fullText.value\n          }) : Content, showEllipsis ? ellipsisStr : null, suffix, renderOperations()]\n        })]\n      });\n    };\n  }\n\n});\nexport { Base as default };","map":{"version":3,"names":["__defProp","Object","defineProperty","__defProps","defineProperties","__getOwnPropDescs","getOwnPropertyDescriptors","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__spreadProps","defineComponent","toRefs","computed","ref","reactive","onUnmounted","watch","onMounted","onUpdated","createVNode","isVNode","mergeProps","getPrefixCls","isObject","EditContent","Operations","ResizeObserver","omit","useMergeState","measure","clipboard","getInnerText","caf","raf","Tooltip","Popover","_isSlot","s","toString","getComponentTags","props","bold","mark","underline","delete","propDelete","code","componentTags","push","Wrap","children","markStyle","color","backgroundColor","reduce","content","Tag","attrs","style","default","normalizeEllipsisConfig","config","showTooltip","TooltipComponent","type","tooltipProps","rows","suffix","ellipsisStr","expandable","Base","name","inheritAttrs","component","String","required","Boolean","disabled","editable","editing","defaultEditing","editText","copyable","copyText","copyDelay","Number","ellipsis","editTooltipProps","copyTooltipProps","emits","text","isEllipsis","expanded","setup","slots","emit","propEditing","prefixCls","classNames","wrapperRef","fullText","setEditing","mergeEditing","onEditStart","onEditChange","onEditEnd","isCopied","copyTimer","onCopyClick","_a","setTimeout","clearTimeout","ellipsisText","ellipsisConfig","rafId","onExpandClick","newVal","renderOperations","forceRenderExpand","calEllipsis","ellipsis2","resizeOnNextFrame","needCalEllipsis","updateFullText","_fullText","_b","_editText","showEllipsis","Content","titleAttrs","title","Component"],"sources":["/www/wwwroot/admin/node_modules/@arco-design/web-vue/es/typography/base.js"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nimport { defineComponent, toRefs, computed, ref, reactive, onUnmounted, watch, onMounted, onUpdated, createVNode, isVNode, mergeProps } from \"vue\";\nimport { getPrefixCls } from \"../_utils/global-config.js\";\nimport { isObject } from \"../_utils/is.js\";\nimport EditContent from \"./edit-content.js\";\nimport Operations from \"./operations.js\";\nimport ResizeObserver from \"../_components/resize-observer.js\";\nimport { omit } from \"../_utils/omit.js\";\nimport useMergeState from \"../_hooks/use-merge-state.js\";\nimport measure from \"./utils/measure.js\";\nimport { clipboard } from \"../_utils/clipboard.js\";\nimport getInnerText from \"./utils/getInnerText.js\";\nimport { caf, raf } from \"../_utils/raf.js\";\nimport Tooltip from \"../tooltip/index.js\";\nimport Popover from \"../popover/index.js\";\nfunction _isSlot(s) {\n  return typeof s === \"function\" || Object.prototype.toString.call(s) === \"[object Object]\" && !isVNode(s);\n}\nfunction getComponentTags(props) {\n  const {\n    bold,\n    mark,\n    underline,\n    delete: propDelete,\n    code\n  } = props;\n  const componentTags = [];\n  if (bold) {\n    componentTags.push(\"b\");\n  }\n  if (underline) {\n    componentTags.push(\"u\");\n  }\n  if (propDelete) {\n    componentTags.push(\"del\");\n  }\n  if (code) {\n    componentTags.push(\"code\");\n  }\n  if (mark) {\n    componentTags.push(\"mark\");\n  }\n  return componentTags;\n}\nfunction Wrap(props, children) {\n  const {\n    mark\n  } = props;\n  const componentTags = getComponentTags(props);\n  const markStyle = isObject(mark) && mark.color ? {\n    backgroundColor: mark.color\n  } : {};\n  return componentTags.reduce((content, Tag) => {\n    const attrs = Tag === \"mark\" ? {\n      style: markStyle\n    } : {};\n    return createVNode(Tag, attrs, _isSlot(content) ? content : {\n      default: () => [content]\n    });\n  }, children);\n}\nfunction normalizeEllipsisConfig(config) {\n  const showTooltip = !!config.showTooltip;\n  const TooltipComponent = isObject(config.showTooltip) && config.showTooltip.type === \"popover\" ? Popover : Tooltip;\n  const tooltipProps = isObject(config.showTooltip) && config.showTooltip.props || {};\n  return __spreadProps(__spreadValues({\n    rows: 1,\n    suffix: \"\",\n    ellipsisStr: \"...\",\n    expandable: false\n  }, omit(config, [\"showTooltip\"])), {\n    showTooltip,\n    TooltipComponent,\n    tooltipProps\n  });\n}\nvar Base = defineComponent({\n  name: \"TypographyBase\",\n  inheritAttrs: false,\n  props: {\n    component: {\n      type: String,\n      required: true\n    },\n    type: {\n      type: String\n    },\n    bold: {\n      type: Boolean\n    },\n    mark: {\n      type: [Boolean, Object],\n      default: false\n    },\n    underline: {\n      type: Boolean\n    },\n    delete: {\n      type: Boolean\n    },\n    code: {\n      type: Boolean\n    },\n    disabled: {\n      type: Boolean\n    },\n    editable: {\n      type: Boolean\n    },\n    editing: {\n      type: Boolean,\n      default: void 0\n    },\n    defaultEditing: {\n      type: Boolean\n    },\n    editText: {\n      type: String\n    },\n    copyable: {\n      type: Boolean\n    },\n    copyText: {\n      type: String\n    },\n    copyDelay: {\n      type: Number,\n      default: 3e3\n    },\n    ellipsis: {\n      type: [Boolean, Object],\n      default: false\n    },\n    editTooltipProps: {\n      type: Object\n    },\n    copyTooltipProps: {\n      type: Object\n    }\n  },\n  emits: {\n    \"editStart\": () => true,\n    \"change\": (text) => true,\n    \"update:editText\": (text) => true,\n    \"editEnd\": () => true,\n    \"update:editing\": (editing) => true,\n    \"copy\": (text) => true,\n    \"ellipsis\": (isEllipsis) => true,\n    \"expand\": (expanded) => true\n  },\n  setup(props, {\n    slots,\n    emit,\n    attrs\n  }) {\n    const {\n      editing: propEditing,\n      defaultEditing,\n      ellipsis,\n      copyable,\n      editable,\n      copyText,\n      editText,\n      copyDelay,\n      component\n    } = toRefs(props);\n    const prefixCls = getPrefixCls(\"typography\");\n    const classNames = computed(() => [prefixCls, {\n      [`${prefixCls}-${props.type}`]: props.type,\n      [`${prefixCls}-disabled`]: props.disabled\n    }]);\n    const wrapperRef = ref();\n    const fullText = ref(\"\");\n    const [editing, setEditing] = useMergeState(defaultEditing.value, reactive({\n      value: propEditing\n    }));\n    const mergeEditing = computed(() => editable.value && editing.value);\n    function onEditStart() {\n      emit(\"update:editing\", true);\n      emit(\"editStart\");\n      setEditing(true);\n    }\n    function onEditChange(text) {\n      emit(\"update:editText\", text);\n      emit(\"change\", text);\n    }\n    function onEditEnd() {\n      if (!editing.value)\n        return;\n      emit(\"update:editing\", false);\n      emit(\"editEnd\");\n      setEditing(false);\n    }\n    const isCopied = ref(false);\n    let copyTimer = null;\n    function onCopyClick() {\n      var _a;\n      const text = (_a = copyText.value) != null ? _a : fullText.value;\n      clipboard(text || \"\");\n      isCopied.value = true;\n      emit(\"copy\", text);\n      copyTimer = setTimeout(() => {\n        isCopied.value = false;\n      }, copyDelay.value);\n    }\n    onUnmounted(() => {\n      copyTimer && clearTimeout(copyTimer);\n      copyTimer = null;\n    });\n    const isEllipsis = ref(false);\n    const expanded = ref(false);\n    const ellipsisText = ref(\"\");\n    const ellipsisConfig = computed(() => normalizeEllipsisConfig(isObject(ellipsis.value) && ellipsis.value || {}));\n    let rafId = null;\n    function onExpandClick() {\n      const newVal = !expanded.value;\n      expanded.value = newVal;\n      emit(\"expand\", newVal);\n    }\n    function renderOperations(forceRenderExpand = false) {\n      return createVNode(Operations, {\n        \"editable\": editable.value,\n        \"copyable\": copyable.value,\n        \"expandable\": ellipsisConfig.value.expandable,\n        \"isCopied\": isCopied.value,\n        \"isEllipsis\": isEllipsis.value,\n        \"expanded\": expanded.value,\n        \"forceRenderExpand\": forceRenderExpand,\n        \"editTooltipProps\": props.editTooltipProps,\n        \"copyTooltipProps\": props.copyTooltipProps,\n        \"onEdit\": onEditStart,\n        \"onCopy\": onCopyClick,\n        \"onExpand\": onExpandClick\n      }, {\n        \"copy-tooltip\": slots[\"copy-tooltip\"],\n        \"copy-icon\": slots[\"copy-icon\"],\n        \"expand-node\": slots[\"expand-node\"]\n      });\n    }\n    function calEllipsis() {\n      if (!wrapperRef.value)\n        return;\n      const {\n        ellipsis: ellipsis2,\n        text\n      } = measure(wrapperRef.value, ellipsisConfig.value, renderOperations(!!ellipsisConfig.value.expandable), fullText.value);\n      if (isEllipsis.value !== ellipsis2) {\n        isEllipsis.value = ellipsis2;\n        emit(\"ellipsis\", ellipsis2);\n      }\n      if (ellipsisText.value !== text) {\n        ellipsisText.value = text || \"\";\n      }\n    }\n    function resizeOnNextFrame() {\n      const needCalEllipsis = ellipsis.value && !expanded.value;\n      if (!needCalEllipsis)\n        return;\n      caf(rafId);\n      rafId = raf(() => {\n        calEllipsis();\n      });\n    }\n    onUnmounted(() => {\n      caf(rafId);\n    });\n    watch(() => ellipsisConfig.value.rows, () => {\n      resizeOnNextFrame();\n    });\n    watch(ellipsis, (newVal) => {\n      if (newVal) {\n        resizeOnNextFrame();\n      } else {\n        isEllipsis.value = false;\n      }\n    });\n    let children = [];\n    const updateFullText = () => {\n      if (ellipsis.value || copyable.value || editable.value) {\n        const _fullText = getInnerText(children);\n        if (_fullText !== fullText.value) {\n          fullText.value = _fullText;\n          resizeOnNextFrame();\n        }\n      }\n    };\n    onMounted(updateFullText);\n    onUpdated(updateFullText);\n    return () => {\n      var _a, _b;\n      children = ((_a = slots.default) == null ? void 0 : _a.call(slots)) || [];\n      if (mergeEditing.value) {\n        const _editText = (_b = editText.value) != null ? _b : fullText.value;\n        return createVNode(EditContent, {\n          \"text\": _editText,\n          \"onChange\": (text) => {\n            if (text !== _editText) {\n              onEditChange(text);\n            }\n          },\n          \"onEnd\": onEditEnd\n        }, null);\n      }\n      const {\n        suffix,\n        ellipsisStr,\n        showTooltip,\n        tooltipProps,\n        TooltipComponent\n      } = ellipsisConfig.value;\n      const showEllipsis = isEllipsis.value && !expanded.value;\n      const Content = Wrap(props, showEllipsis ? ellipsisText.value : children);\n      const titleAttrs = showEllipsis && !showTooltip ? {\n        title: fullText.value\n      } : {};\n      const Component = component.value;\n      return createVNode(ResizeObserver, {\n        \"onResize\": () => resizeOnNextFrame()\n      }, {\n        default: () => [createVNode(Component, mergeProps({\n          \"class\": classNames.value,\n          \"ref\": wrapperRef\n        }, titleAttrs, attrs), {\n          default: () => [showEllipsis && showTooltip ? createVNode(TooltipComponent, tooltipProps, {\n            default: () => [createVNode(\"span\", null, [Content])],\n            content: () => fullText.value\n          }) : Content, showEllipsis ? ellipsisStr : null, suffix, renderOperations()]\n        })]\n      });\n    };\n  }\n});\nexport { Base as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}