{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport NP from \"number-precision\";\nimport { NOOP } from \"../_utils/dom.js\";\nimport { isFunction, isArray } from \"../_utils/is.js\";\n\nconst getResponse = xhr => {\n  const res = xhr.responseText || xhr.response;\n\n  if (!res) {\n    return void 0;\n  }\n\n  const contentType = xhr.getResponseHeader(\"Content-Type\");\n\n  if (contentType && contentType.includes(\"json\")) {\n    try {\n      return JSON.parse(res);\n    } catch {\n      return res;\n    }\n  }\n\n  return res;\n};\n\nconst getProgressStatus = status => {\n  switch (status) {\n    case \"done\":\n      return \"success\";\n\n    case \"error\":\n      return \"danger\";\n\n    default:\n      return \"normal\";\n  }\n};\n\nconst getValue = (obj, fileItem) => {\n  if (isFunction(obj)) {\n    return obj(fileItem);\n  }\n\n  return obj;\n};\n\nconst uploadRequest = ({\n  fileItem,\n  action,\n  name: originName,\n  data: originData,\n  headers = {},\n  withCredentials = false,\n  onProgress = NOOP,\n  onSuccess = NOOP,\n  onError = NOOP\n}) => {\n  const name = getValue(originName, fileItem) || \"file\";\n  const data = getValue(originData, fileItem);\n  const xhr = new XMLHttpRequest();\n\n  if (withCredentials) {\n    xhr.withCredentials = true;\n  }\n\n  xhr.upload.onprogress = e => {\n    const percent = e.total > 0 ? NP.round(e.loaded / e.total, 2) : 0;\n    onProgress(percent, e);\n  };\n\n  xhr.onerror = function error(e) {\n    onError(e);\n  };\n\n  xhr.onload = () => {\n    if (xhr.status < 200 || xhr.status >= 300) {\n      onError(getResponse(xhr));\n      return;\n    }\n\n    onSuccess(getResponse(xhr));\n  };\n\n  const formData = new FormData();\n\n  if (data) {\n    for (const key of Object.keys(data)) {\n      formData.append(key, data[key]);\n    }\n  }\n\n  if (fileItem.file) {\n    formData.append(name, fileItem.file);\n  }\n\n  xhr.open(\"post\", action != null ? action : \"\", true);\n\n  for (const key of Object.keys(headers)) {\n    xhr.setRequestHeader(key, headers[key]);\n  }\n\n  xhr.send(formData);\n  return {\n    abort() {\n      xhr.abort();\n    }\n\n  };\n};\n\nconst isAcceptFile = (file, accept) => {\n  if (accept && file) {\n    const accepts = isArray(accept) ? accept : accept.split(\",\").map(x => x.trim()).filter(x => x);\n    const fileExtension = file.name.indexOf(\".\") > -1 ? file.name.split(\".\").pop() : \"\";\n    return accepts.some(type => {\n      const text = type && type.toLowerCase();\n      const fileType = (file.type || \"\").toLowerCase();\n\n      if (text === fileType) {\n        return true;\n      }\n\n      if (/\\/\\*/.test(text)) {\n        return fileType.replace(/\\/.*$/, \"\") === text.replace(/\\/.*$/, \"\");\n      }\n\n      if (/\\..*/.test(text)) {\n        return text === `.${fileExtension && fileExtension.toLowerCase()}`;\n      }\n\n      return false;\n    });\n  }\n\n  return Boolean(file);\n};\n\nconst loopDirectory = (itemList, accept, callback) => {\n  const files = [];\n  let restFileCount = 0;\n\n  const onFinish = () => {\n    !restFileCount && callback(files);\n  };\n\n  const _loopDirectory = item => {\n    restFileCount += 1;\n\n    if (item == null ? void 0 : item.isFile) {\n      item.file(file => {\n        restFileCount -= 1;\n\n        if (isAcceptFile(file, accept)) {\n          Object.defineProperty(file, \"webkitRelativePath\", {\n            value: item.fullPath.replace(/^\\//, \"\")\n          });\n          files.push(file);\n        }\n\n        onFinish();\n      });\n      return;\n    }\n\n    if (item == null ? void 0 : item.isDirectory) {\n      const reader = item.createReader();\n      let flag = false;\n\n      const readEntries = () => {\n        reader.readEntries(entries => {\n          if (!flag) {\n            restFileCount -= 1;\n            flag = true;\n          }\n\n          if (entries.length === 0) {\n            onFinish();\n          } else {\n            readEntries();\n            entries.forEach(_loopDirectory);\n          }\n        });\n      };\n\n      readEntries();\n      return;\n    }\n\n    restFileCount -= 1;\n    onFinish();\n  };\n\n  [].slice.call(itemList).forEach(item => item.webkitGetAsEntry && _loopDirectory(item.webkitGetAsEntry()));\n};\n\nconst isImage = file => {\n  var _a;\n\n  return (_a = file.type) == null ? void 0 : _a.includes(\"image\");\n};\n\nconst getFiles = (fileList, accept) => {\n  if (!fileList) {\n    return [];\n  }\n\n  const files = Array.from(fileList);\n\n  if (accept) {\n    return files.filter(file => {\n      return isAcceptFile(file, accept);\n    });\n  }\n\n  return files;\n};\n\nexport { getFiles, getProgressStatus, isImage, loopDirectory, uploadRequest };","map":{"version":3,"names":["NP","NOOP","isFunction","isArray","getResponse","xhr","res","responseText","response","contentType","getResponseHeader","includes","JSON","parse","getProgressStatus","status","getValue","obj","fileItem","uploadRequest","action","name","originName","data","originData","headers","withCredentials","onProgress","onSuccess","onError","XMLHttpRequest","upload","onprogress","e","percent","total","round","loaded","onerror","error","onload","formData","FormData","key","Object","keys","append","file","open","setRequestHeader","send","abort","isAcceptFile","accept","accepts","split","map","x","trim","filter","fileExtension","indexOf","pop","some","type","text","toLowerCase","fileType","test","replace","Boolean","loopDirectory","itemList","callback","files","restFileCount","onFinish","_loopDirectory","item","isFile","defineProperty","value","fullPath","push","isDirectory","reader","createReader","flag","readEntries","entries","length","forEach","slice","call","webkitGetAsEntry","isImage","_a","getFiles","fileList","Array","from"],"sources":["/www/wwwroot/admin/node_modules/@arco-design/web-vue/es/upload/utils.js"],"sourcesContent":["import NP from \"number-precision\";\nimport { NOOP } from \"../_utils/dom.js\";\nimport { isFunction, isArray } from \"../_utils/is.js\";\nconst getResponse = (xhr) => {\n  const res = xhr.responseText || xhr.response;\n  if (!res) {\n    return void 0;\n  }\n  const contentType = xhr.getResponseHeader(\"Content-Type\");\n  if (contentType && contentType.includes(\"json\")) {\n    try {\n      return JSON.parse(res);\n    } catch {\n      return res;\n    }\n  }\n  return res;\n};\nconst getProgressStatus = (status) => {\n  switch (status) {\n    case \"done\":\n      return \"success\";\n    case \"error\":\n      return \"danger\";\n    default:\n      return \"normal\";\n  }\n};\nconst getValue = (obj, fileItem) => {\n  if (isFunction(obj)) {\n    return obj(fileItem);\n  }\n  return obj;\n};\nconst uploadRequest = ({\n  fileItem,\n  action,\n  name: originName,\n  data: originData,\n  headers = {},\n  withCredentials = false,\n  onProgress = NOOP,\n  onSuccess = NOOP,\n  onError = NOOP\n}) => {\n  const name = getValue(originName, fileItem) || \"file\";\n  const data = getValue(originData, fileItem);\n  const xhr = new XMLHttpRequest();\n  if (withCredentials) {\n    xhr.withCredentials = true;\n  }\n  xhr.upload.onprogress = (e) => {\n    const percent = e.total > 0 ? NP.round(e.loaded / e.total, 2) : 0;\n    onProgress(percent, e);\n  };\n  xhr.onerror = function error(e) {\n    onError(e);\n  };\n  xhr.onload = () => {\n    if (xhr.status < 200 || xhr.status >= 300) {\n      onError(getResponse(xhr));\n      return;\n    }\n    onSuccess(getResponse(xhr));\n  };\n  const formData = new FormData();\n  if (data) {\n    for (const key of Object.keys(data)) {\n      formData.append(key, data[key]);\n    }\n  }\n  if (fileItem.file) {\n    formData.append(name, fileItem.file);\n  }\n  xhr.open(\"post\", action != null ? action : \"\", true);\n  for (const key of Object.keys(headers)) {\n    xhr.setRequestHeader(key, headers[key]);\n  }\n  xhr.send(formData);\n  return {\n    abort() {\n      xhr.abort();\n    }\n  };\n};\nconst isAcceptFile = (file, accept) => {\n  if (accept && file) {\n    const accepts = isArray(accept) ? accept : accept.split(\",\").map((x) => x.trim()).filter((x) => x);\n    const fileExtension = file.name.indexOf(\".\") > -1 ? file.name.split(\".\").pop() : \"\";\n    return accepts.some((type) => {\n      const text = type && type.toLowerCase();\n      const fileType = (file.type || \"\").toLowerCase();\n      if (text === fileType) {\n        return true;\n      }\n      if (/\\/\\*/.test(text)) {\n        return fileType.replace(/\\/.*$/, \"\") === text.replace(/\\/.*$/, \"\");\n      }\n      if (/\\..*/.test(text)) {\n        return text === `.${fileExtension && fileExtension.toLowerCase()}`;\n      }\n      return false;\n    });\n  }\n  return Boolean(file);\n};\nconst loopDirectory = (itemList, accept, callback) => {\n  const files = [];\n  let restFileCount = 0;\n  const onFinish = () => {\n    !restFileCount && callback(files);\n  };\n  const _loopDirectory = (item) => {\n    restFileCount += 1;\n    if (item == null ? void 0 : item.isFile) {\n      item.file((file) => {\n        restFileCount -= 1;\n        if (isAcceptFile(file, accept)) {\n          Object.defineProperty(file, \"webkitRelativePath\", {\n            value: item.fullPath.replace(/^\\//, \"\")\n          });\n          files.push(file);\n        }\n        onFinish();\n      });\n      return;\n    }\n    if (item == null ? void 0 : item.isDirectory) {\n      const reader = item.createReader();\n      let flag = false;\n      const readEntries = () => {\n        reader.readEntries((entries) => {\n          if (!flag) {\n            restFileCount -= 1;\n            flag = true;\n          }\n          if (entries.length === 0) {\n            onFinish();\n          } else {\n            readEntries();\n            entries.forEach(_loopDirectory);\n          }\n        });\n      };\n      readEntries();\n      return;\n    }\n    restFileCount -= 1;\n    onFinish();\n  };\n  [].slice.call(itemList).forEach((item) => item.webkitGetAsEntry && _loopDirectory(item.webkitGetAsEntry()));\n};\nconst isImage = (file) => {\n  var _a;\n  return (_a = file.type) == null ? void 0 : _a.includes(\"image\");\n};\nconst getFiles = (fileList, accept) => {\n  if (!fileList) {\n    return [];\n  }\n  const files = Array.from(fileList);\n  if (accept) {\n    return files.filter((file) => {\n      return isAcceptFile(file, accept);\n    });\n  }\n  return files;\n};\nexport { getFiles, getProgressStatus, isImage, loopDirectory, uploadRequest };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}