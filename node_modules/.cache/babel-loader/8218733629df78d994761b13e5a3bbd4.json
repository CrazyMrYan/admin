{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport { defineComponent, toRefs, computed, resolveComponent, openBlock, createBlock, withCtx, createElementBlock, normalizeClass, Fragment, renderList, mergeProps, createCommentVNode } from \"vue\";\nimport ExpandTransition from \"./expand-transition.js\";\nimport { getPrefixCls } from \"../_utils/global-config.js\";\nimport useTreeContext from \"./hooks/use-tree-context.js\";\nimport BaseTreeNode from \"./base-node.js\";\nimport _export_sfc from \"../_virtual/plugin-vue_export-helper.js\";\n\nconst _sfc_main = defineComponent({\n  name: \"TransitionNodeList\",\n  components: {\n    ExpandTransition,\n    BaseTreeNode\n  },\n  props: {\n    nodeKey: {\n      type: [String, Number],\n      required: true\n    }\n  },\n\n  setup(props) {\n    const prefixCls = getPrefixCls(\"tree\");\n    const classNames = [`${prefixCls}-node-list`];\n    const treeContext = useTreeContext();\n    const {\n      nodeKey\n    } = toRefs(props);\n    const expanded = computed(() => {\n      var _a, _b;\n\n      return (_b = (_a = treeContext.expandedKeys) == null ? void 0 : _a.includes) == null ? void 0 : _b.call(_a, nodeKey.value);\n    });\n    const visibleNodeList = computed(() => {\n      var _a;\n\n      const expandedKeysSet = new Set(treeContext.expandedKeys || []);\n      const childNodeList = (_a = treeContext.flattenTreeData) == null ? void 0 : _a.filter(node => {\n        var _a2, _b;\n\n        if ((_a2 = node.pathParentKeys) == null ? void 0 : _a2.includes(nodeKey.value)) {\n          return !treeContext.filterTreeNode || ((_b = treeContext.filterTreeNode) == null ? void 0 : _b.call(treeContext, node.treeNodeData));\n        }\n\n        return false;\n      });\n      return childNodeList == null ? void 0 : childNodeList.filter(node => {\n        var _a2;\n\n        if (expanded.value) {\n          return (_a2 = node.pathParentKeys) == null ? void 0 : _a2.every(_key => expandedKeysSet.has(_key));\n        }\n\n        const index = node.pathParentKeys.indexOf(nodeKey.value);\n        return node.pathParentKeys.slice(index + 1).every(_key => expandedKeysSet.has(_key));\n      });\n    });\n    const show = computed(() => {\n      var _a, _b;\n\n      return ((_a = treeContext.currentExpandKeys) == null ? void 0 : _a.includes(nodeKey.value)) && ((_b = visibleNodeList.value) == null ? void 0 : _b.length);\n    });\n    return {\n      classNames,\n      visibleNodeList,\n      show,\n      expanded,\n\n      onTransitionEnd() {\n        var _a;\n\n        (_a = treeContext.onExpandEnd) == null ? void 0 : _a.call(treeContext, nodeKey.value);\n      }\n\n    };\n  }\n\n});\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_BaseTreeNode = resolveComponent(\"BaseTreeNode\");\n\n  const _component_ExpandTransition = resolveComponent(\"ExpandTransition\");\n\n  return openBlock(), createBlock(_component_ExpandTransition, {\n    expanded: _ctx.expanded,\n    onEnd: _ctx.onTransitionEnd\n  }, {\n    default: withCtx(() => [_ctx.show ? (openBlock(), createElementBlock(\"div\", {\n      key: 0,\n      class: normalizeClass(_ctx.classNames)\n    }, [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.visibleNodeList, node => {\n      return openBlock(), createBlock(_component_BaseTreeNode, mergeProps({\n        key: node.key\n      }, node.treeNodeProps), null, 16);\n    }), 128))], 2)) : createCommentVNode(\"v-if\", true)]),\n    _: 1\n  }, 8, [\"expanded\", \"onEnd\"]);\n}\n\nvar TransitionNodeList = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\n\nexport { TransitionNodeList as default };","map":{"version":3,"names":["defineComponent","toRefs","computed","resolveComponent","openBlock","createBlock","withCtx","createElementBlock","normalizeClass","Fragment","renderList","mergeProps","createCommentVNode","ExpandTransition","getPrefixCls","useTreeContext","BaseTreeNode","_export_sfc","_sfc_main","name","components","props","nodeKey","type","String","Number","required","setup","prefixCls","classNames","treeContext","expanded","_a","_b","expandedKeys","includes","call","value","visibleNodeList","expandedKeysSet","Set","childNodeList","flattenTreeData","filter","node","_a2","pathParentKeys","filterTreeNode","treeNodeData","every","_key","has","index","indexOf","slice","show","currentExpandKeys","length","onTransitionEnd","onExpandEnd","_sfc_render","_ctx","_cache","$props","$setup","$data","$options","_component_BaseTreeNode","_component_ExpandTransition","onEnd","default","key","class","treeNodeProps","_","TransitionNodeList"],"sources":["/www/wwwroot/admin/node_modules/@arco-design/web-vue/es/tree/transition-node-list.js"],"sourcesContent":["import { defineComponent, toRefs, computed, resolveComponent, openBlock, createBlock, withCtx, createElementBlock, normalizeClass, Fragment, renderList, mergeProps, createCommentVNode } from \"vue\";\nimport ExpandTransition from \"./expand-transition.js\";\nimport { getPrefixCls } from \"../_utils/global-config.js\";\nimport useTreeContext from \"./hooks/use-tree-context.js\";\nimport BaseTreeNode from \"./base-node.js\";\nimport _export_sfc from \"../_virtual/plugin-vue_export-helper.js\";\nconst _sfc_main = defineComponent({\n  name: \"TransitionNodeList\",\n  components: {\n    ExpandTransition,\n    BaseTreeNode\n  },\n  props: {\n    nodeKey: {\n      type: [String, Number],\n      required: true\n    }\n  },\n  setup(props) {\n    const prefixCls = getPrefixCls(\"tree\");\n    const classNames = [`${prefixCls}-node-list`];\n    const treeContext = useTreeContext();\n    const { nodeKey } = toRefs(props);\n    const expanded = computed(() => {\n      var _a, _b;\n      return (_b = (_a = treeContext.expandedKeys) == null ? void 0 : _a.includes) == null ? void 0 : _b.call(_a, nodeKey.value);\n    });\n    const visibleNodeList = computed(() => {\n      var _a;\n      const expandedKeysSet = new Set(treeContext.expandedKeys || []);\n      const childNodeList = (_a = treeContext.flattenTreeData) == null ? void 0 : _a.filter((node) => {\n        var _a2, _b;\n        if ((_a2 = node.pathParentKeys) == null ? void 0 : _a2.includes(nodeKey.value)) {\n          return !treeContext.filterTreeNode || ((_b = treeContext.filterTreeNode) == null ? void 0 : _b.call(treeContext, node.treeNodeData));\n        }\n        return false;\n      });\n      return childNodeList == null ? void 0 : childNodeList.filter((node) => {\n        var _a2;\n        if (expanded.value) {\n          return (_a2 = node.pathParentKeys) == null ? void 0 : _a2.every((_key) => expandedKeysSet.has(_key));\n        }\n        const index = node.pathParentKeys.indexOf(nodeKey.value);\n        return node.pathParentKeys.slice(index + 1).every((_key) => expandedKeysSet.has(_key));\n      });\n    });\n    const show = computed(() => {\n      var _a, _b;\n      return ((_a = treeContext.currentExpandKeys) == null ? void 0 : _a.includes(nodeKey.value)) && ((_b = visibleNodeList.value) == null ? void 0 : _b.length);\n    });\n    return {\n      classNames,\n      visibleNodeList,\n      show,\n      expanded,\n      onTransitionEnd() {\n        var _a;\n        (_a = treeContext.onExpandEnd) == null ? void 0 : _a.call(treeContext, nodeKey.value);\n      }\n    };\n  }\n});\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_BaseTreeNode = resolveComponent(\"BaseTreeNode\");\n  const _component_ExpandTransition = resolveComponent(\"ExpandTransition\");\n  return openBlock(), createBlock(_component_ExpandTransition, {\n    expanded: _ctx.expanded,\n    onEnd: _ctx.onTransitionEnd\n  }, {\n    default: withCtx(() => [\n      _ctx.show ? (openBlock(), createElementBlock(\"div\", {\n        key: 0,\n        class: normalizeClass(_ctx.classNames)\n      }, [\n        (openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.visibleNodeList, (node) => {\n          return openBlock(), createBlock(_component_BaseTreeNode, mergeProps({\n            key: node.key\n          }, node.treeNodeProps), null, 16);\n        }), 128))\n      ], 2)) : createCommentVNode(\"v-if\", true)\n    ]),\n    _: 1\n  }, 8, [\"expanded\", \"onEnd\"]);\n}\nvar TransitionNodeList = /* @__PURE__ */ _export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\nexport { TransitionNodeList as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}